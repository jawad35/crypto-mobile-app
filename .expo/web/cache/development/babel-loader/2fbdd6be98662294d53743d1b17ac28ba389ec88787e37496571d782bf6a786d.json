{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from 'react-native-reanimated';\nimport { Defs, LinearGradient, Stop, Path } from 'react-native-svg';\nimport { LineChartDimensionsContext } from \"./Chart\";\nimport { LineChartPathContext } from \"./LineChartPathContext\";\nimport useAnimatedPath from \"./useAnimatedPath\";\nvar AnimatedPath = Animated.createAnimatedComponent(Path);\nvar id = 0;\nLineChartGradient.displayName = 'LineChartGradient';\nexport function LineChartGradient(_ref) {\n  var _ref$color = _ref.color,\n    overrideColor = _ref$color === void 0 ? undefined : _ref$color,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useContext = React.useContext(LineChartDimensionsContext),\n    area = _React$useContext.area;\n  var _React$useContext2 = React.useContext(LineChartPathContext),\n    contextColor = _React$useContext2.color,\n    isTransitionEnabled = _React$useContext2.isTransitionEnabled;\n  var color = overrideColor || contextColor;\n  var _useAnimatedPath = useAnimatedPath({\n      enabled: isTransitionEnabled,\n      path: area\n    }),\n    animatedProps = _useAnimatedPath.animatedProps;\n  var localId = React.useRef(++id);\n  return React.createElement(React.Fragment, null, children ? React.createElement(Defs, null, React.createElement(LinearGradient, {\n    id: `${localId.current}`,\n    x1: \"0\",\n    x2: \"0\",\n    y1: \"0\",\n    y2: \"100%\"\n  }, children)) : React.createElement(Defs, null, React.createElement(LinearGradient, {\n    id: `${localId.current}`,\n    x1: \"0\",\n    x2: \"0\",\n    y1: \"0\",\n    y2: \"100%\"\n  }, React.createElement(Stop, {\n    offset: \"20%\",\n    stopColor: color,\n    stopOpacity: 0.15\n  }), React.createElement(Stop, {\n    offset: \"40%\",\n    stopColor: color,\n    stopOpacity: 0.05\n  }), React.createElement(Stop, {\n    offset: \"100%\",\n    stopColor: color,\n    stopOpacity: 0\n  }))), React.createElement(AnimatedPath, _extends({\n    animatedProps: animatedProps,\n    fill: `url(#${localId.current})`\n  }, props)));\n}","map":{"version":3,"names":["React","Animated","Defs","LinearGradient","Stop","Path","LineChartDimensionsContext","LineChartPathContext","useAnimatedPath","AnimatedPath","createAnimatedComponent","id","LineChartGradient","displayName","_ref","_ref$color","color","overrideColor","undefined","children","props","_objectWithoutProperties","_excluded","_React$useContext","useContext","area","_React$useContext2","contextColor","isTransitionEnabled","_useAnimatedPath","enabled","path","animatedProps","localId","useRef","createElement","Fragment","current","x1","x2","y1","y2","offset","stopColor","stopOpacity","_extends","fill"],"sources":["C:\\Users\\UEFI\\Desktop\\exchangepro\\crypto_mobile_app (copy)\\node_modules\\react-native-wagmi-charts\\src\\charts\\line\\Gradient.tsx"],"sourcesContent":["import * as React from 'react';\nimport Animated from 'react-native-reanimated';\nimport { Defs, LinearGradient, Stop, Path, PathProps } from 'react-native-svg';\n\nimport { LineChartDimensionsContext } from './Chart';\nimport { LineChartPathContext } from './LineChartPathContext';\nimport useAnimatedPath from './useAnimatedPath';\n\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nexport type LineChartGradientProps = Animated.AnimateProps<PathProps> & {\n  color?: string;\n  children?: React.ReactNode;\n};\n\nlet id = 0;\n\nLineChartGradient.displayName = 'LineChartGradient';\n\nexport function LineChartGradient({\n  color: overrideColor = undefined,\n  children,\n  ...props\n}: LineChartGradientProps) {\n  const { area } = React.useContext(LineChartDimensionsContext);\n  const { color: contextColor, isTransitionEnabled } =\n    React.useContext(LineChartPathContext);\n\n  const color = overrideColor || contextColor;\n\n  ////////////////////////////////////////////////\n\n  const { animatedProps } = useAnimatedPath({\n    enabled: isTransitionEnabled,\n    path: area,\n  });\n\n  ////////////////////////////////////////////////\n\n  const localId = React.useRef(++id);\n\n  ////////////////////////////////////////////////\n\n  return (\n    <>\n      {children ? (\n        <Defs>\n          <LinearGradient\n            id={`${localId.current}`}\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"100%\"\n          >\n            {/*@ts-ignore*/}\n            {children}\n          </LinearGradient>\n        </Defs>\n      ) : (\n        <Defs>\n          <LinearGradient\n            id={`${localId.current}`}\n            x1=\"0\"\n            x2=\"0\"\n            y1=\"0\"\n            y2=\"100%\"\n          >\n            <Stop offset=\"20%\" stopColor={color} stopOpacity={0.15} />\n            <Stop offset=\"40%\" stopColor={color} stopOpacity={0.05} />\n            <Stop offset=\"100%\" stopColor={color} stopOpacity={0} />\n          </LinearGradient>\n        </Defs>\n      )}\n      <AnimatedPath\n        animatedProps={animatedProps}\n        fill={`url(#${localId.current})`}\n        {...props}\n      />\n    </>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,IAAI,EAAEC,cAAc,EAAEC,IAAI,EAAEC,IAAI,QAAmB,kBAAkB;AAE9E,SAASC,0BAA0B;AACnC,SAASC,oBAAoB;AAC7B,OAAOC,eAAe;AAEtB,IAAMC,YAAY,GAAGR,QAAQ,CAACS,uBAAuB,CAACL,IAAI,CAAC;AAO3D,IAAIM,EAAE,GAAG,CAAC;AAEVC,iBAAiB,CAACC,WAAW,GAAG,mBAAmB;AAEnD,OAAO,SAASD,iBAAiBA,CAAAE,IAAA,EAIN;EAAA,IAAAC,UAAA,GAAAD,IAAA,CAHzBE,KAAK;IAAEC,aAAa,GAAAF,UAAA,cAAGG,SAAS,GAAAH,UAAA;IAChCI,QAAQ,GAAAL,IAAA,CAARK,QAAQ;IACLC,KAAA,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EAEH,IAAAC,iBAAA,GAAiBvB,KAAK,CAACwB,UAAU,CAAClB,0BAA0B,CAAC;IAArDmB,IAAA,GAAAF,iBAAA,CAAAE,IAAA;EACR,IAAAC,kBAAA,GACE1B,KAAK,CAACwB,UAAU,CAACjB,oBAAoB,CAAC;IADzBoB,YAAY,GAAAD,kBAAA,CAAnBV,KAAK;IAAgBY,mBAAA,GAAAF,kBAAA,CAAAE,mBAAA;EAG7B,IAAMZ,KAAK,GAAGC,aAAa,IAAIU,YAAY;EAI3C,IAAAE,gBAAA,GAA0BrB,eAAe,CAAC;MACxCsB,OAAO,EAAEF,mBAAmB;MAC5BG,IAAI,EAAEN;IACR,CAAC,CAAC;IAHMO,aAAA,GAAAH,gBAAA,CAAAG,aAAA;EAOR,IAAMC,OAAO,GAAGjC,KAAK,CAACkC,MAAM,CAAC,EAAEvB,EAAE,CAAC;EAIlC,OACEX,KAAA,CAAAmC,aAAA,CAAAnC,KAAA,CAAAoC,QAAA,QACGjB,QAAQ,GACPnB,KAAA,CAAAmC,aAAA,CAACjC,IAAI,QACHF,KAAA,CAAAmC,aAAA,CAAChC,cAAc;IACbQ,EAAE,EAAG,GAAEsB,OAAO,CAACI,OAAQ,EAAE;IACzBC,EAAE,EAAC,GAAG;IACNC,EAAE,EAAC,GAAG;IACNC,EAAE,EAAC,GAAG;IACNC,EAAE,EAAC;EAAM,GAGRtB,QACa,CACZ,CAAC,GAEPnB,KAAA,CAAAmC,aAAA,CAACjC,IAAI,QACHF,KAAA,CAAAmC,aAAA,CAAChC,cAAc;IACbQ,EAAE,EAAG,GAAEsB,OAAO,CAACI,OAAQ,EAAE;IACzBC,EAAE,EAAC,GAAG;IACNC,EAAE,EAAC,GAAG;IACNC,EAAE,EAAC,GAAG;IACNC,EAAE,EAAC;EAAM,GAETzC,KAAA,CAAAmC,aAAA,CAAC/B,IAAI;IAACsC,MAAM,EAAC,KAAK;IAACC,SAAS,EAAE3B,KAAM;IAAC4B,WAAW,EAAE;EAAK,CAAE,CAAC,EAC1D5C,KAAA,CAAAmC,aAAA,CAAC/B,IAAI;IAACsC,MAAM,EAAC,KAAK;IAACC,SAAS,EAAE3B,KAAM;IAAC4B,WAAW,EAAE;EAAK,CAAE,CAAC,EAC1D5C,KAAA,CAAAmC,aAAA,CAAC/B,IAAI;IAACsC,MAAM,EAAC,MAAM;IAACC,SAAS,EAAE3B,KAAM;IAAC4B,WAAW,EAAE;EAAE,CAAE,CACzC,CACZ,CACP,EACD5C,KAAA,CAAAmC,aAAA,CAAC1B,YAAY,EAAAoC,QAAA;IACXb,aAAa,EAAEA,aAAc;IAC7Bc,IAAI,EAAG,QAAOb,OAAO,CAACI,OAAQ;EAAG,GAC7BjB,KAAK,CACV,CACD,CAAC;AAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}