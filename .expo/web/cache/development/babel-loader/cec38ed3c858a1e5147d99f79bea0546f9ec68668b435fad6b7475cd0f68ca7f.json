{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChartHeader = function ChartHeader(_ref) {\n  var selectedInterval = _ref.selectedInterval,\n    setSelectedInterval = _ref.setSelectedInterval;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isPickerVisible = _useState2[0],\n    setPickerVisible = _useState2[1];\n  var _useState3 = useState(\"More\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedValue = _useState4[0],\n    setSelectedValue = _useState4[1];\n  var handleTogglePicker = function handleTogglePicker() {\n    setPickerVisible(!isPickerVisible);\n  };\n  var handleValueChange = function handleValueChange(itemValue) {\n    setSelectedValue(itemValue);\n    setPickerVisible(false);\n  };\n  var items = [{\n    label: \"4h\",\n    value: \"4h\"\n  }, {\n    label: \"Day\",\n    value: \"Day\"\n  }, {\n    label: \"Month\",\n    value: \"Month\"\n  }, {\n    label: \"Year\",\n    value: \"Year\"\n  }];\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return setSelectedInterval(\"1m\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: selectedInterval === \"1m\" ? \"blue\" : \"white\"\n          },\n          children: \"1m\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return setSelectedInterval(\"5m\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: selectedInterval === \"5m\" ? \"blue\" : \"white\"\n          },\n          children: \"5m\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return setSelectedInterval(\"15m\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: selectedInterval === \"15m\" ? \"blue\" : \"white\"\n          },\n          children: \"15m\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return setSelectedInterval(\"30m\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: selectedInterval === \"30m\" ? \"blue\" : \"white\"\n          },\n          children: \"30m\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return setSelectedInterval(\"1h\");\n        },\n        children: _jsx(Text, {\n          style: {\n            color: selectedInterval === \"1h\" ? \"blue\" : \"white\"\n          },\n          children: \"1h\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleTogglePicker,\n        style: styles.customPickerMainView,\n        children: _jsxs(View, {\n          style: styles.CustomPickerIconView,\n          children: [_jsx(Text, {\n            style: styles.CustomPickerSelectedText,\n            children: selectedValue\n          }), _jsx(AntDesign, {\n            name: \"caretdown\",\n            size: 12,\n            color: \"white\"\n          })]\n        })\n      })]\n    }), isPickerVisible && _jsx(View, {\n      children: _jsx(View, {\n        style: styles.CustomPicker,\n        children: _jsx(FlatList, {\n          data: items,\n          keyExtractor: function keyExtractor(item) {\n            return item.value.toString();\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleValueChange(item.value);\n              },\n              children: _jsx(View, {\n                style: [styles.CustomPickerModalItem, selectedValue === item.value && styles.CustomPickerModalItemSelected],\n                children: _jsx(Text, {\n                  style: styles.CustomPickerModalItemText,\n                  children: item.label\n                })\n              })\n            });\n          }\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"gray\",\n    position: \"relative\"\n  },\n  button: {\n    paddingHorizontal: 17,\n    paddingVertical: 5\n  },\n  customPickerMainView: {\n    flex: 1\n  },\n  CustomPickerIconView: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  CustomPickerSelectedText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"white\",\n    marginRight: 4\n  },\n  CustomPicker: {\n    flex: 1,\n    backgroundColor: \"gray\",\n    width: \"100%\",\n    paddingLeft: 16\n  },\n  CustomPickerModal: {\n    position: \"absolute\",\n    top: \"100%\",\n    backgroundColor: \"gray\",\n    width: \"100%\",\n    paddingLeft: 16\n  },\n  CustomPickerModalItem: {\n    padding: 4\n  },\n  CustomPickerModalItemSelected: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    borderRadius: 10,\n    marginVertical: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  CustomPickerModalItemText: {\n    color: \"white\"\n  },\n  selectedButton: {\n    color: \"blue\"\n  }\n});\nexport default ChartHeader;","map":{"version":3,"names":["AntDesign","Picker","React","useState","View","Text","TouchableOpacity","StyleSheet","FlatList","jsx","_jsx","jsxs","_jsxs","ChartHeader","_ref","selectedInterval","setSelectedInterval","_useState","_useState2","_slicedToArray","isPickerVisible","setPickerVisible","_useState3","_useState4","selectedValue","setSelectedValue","handleTogglePicker","handleValueChange","itemValue","items","label","value","children","style","styles","header","button","onPress","color","customPickerMainView","CustomPickerIconView","CustomPickerSelectedText","name","size","CustomPicker","data","keyExtractor","item","toString","renderItem","_ref2","CustomPickerModalItem","CustomPickerModalItemSelected","CustomPickerModalItemText","create","flex","flexDirection","alignItems","backgroundColor","position","paddingHorizontal","paddingVertical","fontSize","fontWeight","marginRight","width","paddingLeft","CustomPickerModal","top","padding","borderRadius","marginVertical","justifyContent","selectedButton"],"sources":["C:/Users/UEFI/Desktop/Crypto App/crypto_mobile_app (copy) (2)/components/ChartHeader.js"],"sourcesContent":["import { AntDesign } from \"@expo/vector-icons\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  FlatList,\n} from \"react-native\";\n\nconst ChartHeader = ({ selectedInterval, setSelectedInterval }) => {\n  //   const [selectedInterval, setSelectedInterval] = useState('1m');\n  const [isPickerVisible, setPickerVisible] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"More\");\n\n  const handleTogglePicker = () => {\n    setPickerVisible(!isPickerVisible);\n  };\n  const handleValueChange = (itemValue) => {\n    setSelectedValue(itemValue);\n    setPickerVisible(false);\n  };\n\n  const items = [\n    // { label: \"More\", value: \"\" },\n\n    { label: \"4h\", value: \"4h\" },\n\n    { label: \"Day\", value: \"Day\" },\n\n    { label: \"Month\", value: \"Month\" },\n    { label: \"Year\", value: \"Year\" },\n  ];\n  return (\n    <View>\n      <View style={styles.header}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => setSelectedInterval(\"1m\")}\n        >\n          <Text\n            style={{\n              color: selectedInterval === \"1m\" ? \"blue\" : \"white\",\n            }}\n          >\n            1m\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => setSelectedInterval(\"5m\")}\n        >\n          <Text\n            style={{\n              color: selectedInterval === \"5m\" ? \"blue\" : \"white\",\n            }}\n          >\n            5m\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => setSelectedInterval(\"15m\")}\n        >\n          <Text\n            style={{\n              color: selectedInterval === \"15m\" ? \"blue\" : \"white\",\n            }}\n          >\n            15m\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => setSelectedInterval(\"30m\")}\n        >\n          <Text\n            style={{\n              color: selectedInterval === \"30m\" ? \"blue\" : \"white\",\n            }}\n          >\n            30m\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => setSelectedInterval(\"1h\")}\n        >\n          <Text\n            style={{\n              color: selectedInterval === \"1h\" ? \"blue\" : \"white\",\n            }}\n          >\n            1h\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={handleTogglePicker}\n          style={styles.customPickerMainView}\n        >\n          <View style={styles.CustomPickerIconView}>\n            <Text style={styles.CustomPickerSelectedText}>{selectedValue}</Text>\n            <AntDesign name=\"caretdown\" size={12} color=\"white\" />\n          </View>\n        </TouchableOpacity>\n      </View>\n      {isPickerVisible && (\n        <View>\n          <View style={styles.CustomPicker}>\n            <FlatList\n              data={items}\n              keyExtractor={(item) => item.value.toString()}\n              renderItem={({ item }) => (\n                <TouchableOpacity onPress={() => handleValueChange(item.value)}>\n                  <View\n                    style={[\n                      styles.CustomPickerModalItem,\n                      selectedValue === item.value &&\n                        styles.CustomPickerModalItemSelected,\n                    ]}\n                  >\n                    <Text style={styles.CustomPickerModalItemText}>\n                      {item.label}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              )}\n            />\n          </View>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"gray\",\n    position: \"relative\",\n  },\n  button: {\n    paddingHorizontal: 17,\n    paddingVertical: 5,\n  },\n  customPickerMainView: {\n    flex: 1,\n  },\n  CustomPickerIconView: {\n    flexDirection: \"row\",\n    // justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  CustomPickerSelectedText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: \"white\",\n    marginRight: 4,\n  },\n  CustomPicker: {\n    flex: 1,\n    // position: \"absolute\",\n    // top: \"100%\",\n    backgroundColor: \"gray\",\n    width: \"100%\",\n    paddingLeft: 16,\n  },\n  CustomPickerModal: {\n    position: \"absolute\",\n    top: \"100%\",\n    backgroundColor: \"gray\",\n    width: \"100%\",\n    paddingLeft: 16,\n  },\n  CustomPickerModalItem: {\n    padding: 4,\n  },\n  CustomPickerModalItemSelected: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    borderRadius: 10,\n    marginVertical: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  CustomPickerModalItemText: {\n    color: \"white\",\n  },\n  selectedButton: {\n    color: \"blue\",\n  },\n});\n\nexport default ChartHeader;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,MAAM,QAAQ,6BAA6B;AACpD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AASxC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAkD;EAAA,IAA5CC,gBAAgB,GAAAD,IAAA,CAAhBC,gBAAgB;IAAEC,mBAAmB,GAAAF,IAAA,CAAnBE,mBAAmB;EAE1D,IAAAC,SAAA,GAA4Cd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,eAAe,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACxC,IAAAI,UAAA,GAA0CnB,QAAQ,CAAC,MAAM,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAEtC,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/BL,gBAAgB,CAAC,CAACD,eAAe,CAAC;EACpC,CAAC;EACD,IAAMO,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,SAAS,EAAK;IACvCH,gBAAgB,CAACG,SAAS,CAAC;IAC3BP,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,IAAMQ,KAAK,GAAG,CAGZ;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EAE5B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAE9B;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,CACjC;EACD,OACEnB,KAAA,CAACR,IAAI;IAAA4B,QAAA,GACHpB,KAAA,CAACR,IAAI;MAAC6B,KAAK,EAAEC,MAAM,CAACC,MAAO;MAAAH,QAAA,GACzBtB,IAAA,CAACJ,gBAAgB;QACf2B,KAAK,EAAEC,MAAM,CAACE,MAAO;QACrBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMrB,mBAAmB,CAAC,IAAI,CAAC;QAAA,CAAC;QAAAgB,QAAA,EAEzCtB,IAAA,CAACL,IAAI;UACH4B,KAAK,EAAE;YACLK,KAAK,EAAEvB,gBAAgB,KAAK,IAAI,GAAG,MAAM,GAAG;UAC9C,CAAE;UAAAiB,QAAA,EACH;QAED,CAAM;MAAC,CACS,CAAC,EACnBtB,IAAA,CAACJ,gBAAgB;QACf2B,KAAK,EAAEC,MAAM,CAACE,MAAO;QACrBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMrB,mBAAmB,CAAC,IAAI,CAAC;QAAA,CAAC;QAAAgB,QAAA,EAEzCtB,IAAA,CAACL,IAAI;UACH4B,KAAK,EAAE;YACLK,KAAK,EAAEvB,gBAAgB,KAAK,IAAI,GAAG,MAAM,GAAG;UAC9C,CAAE;UAAAiB,QAAA,EACH;QAED,CAAM;MAAC,CACS,CAAC,EACnBtB,IAAA,CAACJ,gBAAgB;QACf2B,KAAK,EAAEC,MAAM,CAACE,MAAO;QACrBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMrB,mBAAmB,CAAC,KAAK,CAAC;QAAA,CAAC;QAAAgB,QAAA,EAE1CtB,IAAA,CAACL,IAAI;UACH4B,KAAK,EAAE;YACLK,KAAK,EAAEvB,gBAAgB,KAAK,KAAK,GAAG,MAAM,GAAG;UAC/C,CAAE;UAAAiB,QAAA,EACH;QAED,CAAM;MAAC,CACS,CAAC,EACnBtB,IAAA,CAACJ,gBAAgB;QACf2B,KAAK,EAAEC,MAAM,CAACE,MAAO;QACrBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMrB,mBAAmB,CAAC,KAAK,CAAC;QAAA,CAAC;QAAAgB,QAAA,EAE1CtB,IAAA,CAACL,IAAI;UACH4B,KAAK,EAAE;YACLK,KAAK,EAAEvB,gBAAgB,KAAK,KAAK,GAAG,MAAM,GAAG;UAC/C,CAAE;UAAAiB,QAAA,EACH;QAED,CAAM;MAAC,CACS,CAAC,EACnBtB,IAAA,CAACJ,gBAAgB;QACf2B,KAAK,EAAEC,MAAM,CAACE,MAAO;QACrBC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMrB,mBAAmB,CAAC,IAAI,CAAC;QAAA,CAAC;QAAAgB,QAAA,EAEzCtB,IAAA,CAACL,IAAI;UACH4B,KAAK,EAAE;YACLK,KAAK,EAAEvB,gBAAgB,KAAK,IAAI,GAAG,MAAM,GAAG;UAC9C,CAAE;UAAAiB,QAAA,EACH;QAED,CAAM;MAAC,CACS,CAAC,EACnBtB,IAAA,CAACJ,gBAAgB;QACf+B,OAAO,EAAEX,kBAAmB;QAC5BO,KAAK,EAAEC,MAAM,CAACK,oBAAqB;QAAAP,QAAA,EAEnCpB,KAAA,CAACR,IAAI;UAAC6B,KAAK,EAAEC,MAAM,CAACM,oBAAqB;UAAAR,QAAA,GACvCtB,IAAA,CAACL,IAAI;YAAC4B,KAAK,EAAEC,MAAM,CAACO,wBAAyB;YAAAT,QAAA,EAAER;UAAa,CAAO,CAAC,EACpEd,IAAA,CAACV,SAAS;YAAC0C,IAAI,EAAC,WAAW;YAACC,IAAI,EAAE,EAAG;YAACL,KAAK,EAAC;UAAO,CAAE,CAAC;QAAA,CAClD;MAAC,CACS,CAAC;IAAA,CACf,CAAC,EACNlB,eAAe,IACdV,IAAA,CAACN,IAAI;MAAA4B,QAAA,EACHtB,IAAA,CAACN,IAAI;QAAC6B,KAAK,EAAEC,MAAM,CAACU,YAAa;QAAAZ,QAAA,EAC/BtB,IAAA,CAACF,QAAQ;UACPqC,IAAI,EAAEhB,KAAM;UACZiB,YAAY,EAAE,SAAAA,aAACC,IAAI;YAAA,OAAKA,IAAI,CAAChB,KAAK,CAACiB,QAAQ,CAAC,CAAC;UAAA,CAAC;UAC9CC,UAAU,EAAE,SAAAA,WAAAC,KAAA;YAAA,IAAGH,IAAI,GAAAG,KAAA,CAAJH,IAAI;YAAA,OACjBrC,IAAA,CAACJ,gBAAgB;cAAC+B,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMV,iBAAiB,CAACoB,IAAI,CAAChB,KAAK,CAAC;cAAA,CAAC;cAAAC,QAAA,EAC7DtB,IAAA,CAACN,IAAI;gBACH6B,KAAK,EAAE,CACLC,MAAM,CAACiB,qBAAqB,EAC5B3B,aAAa,KAAKuB,IAAI,CAAChB,KAAK,IAC1BG,MAAM,CAACkB,6BAA6B,CACtC;gBAAApB,QAAA,EAEFtB,IAAA,CAACL,IAAI;kBAAC4B,KAAK,EAAEC,MAAM,CAACmB,yBAA0B;kBAAArB,QAAA,EAC3Ce,IAAI,CAACjB;gBAAK,CACP;cAAC,CACH;YAAC,CACS,CAAC;UAAA;QACnB,CACH;MAAC,CACE;IAAC,CACH,CACP;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMI,MAAM,GAAG3B,UAAU,CAAC+C,MAAM,CAAC;EAC/BnB,MAAM,EAAE;IACNoB,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,MAAM;IACvBC,QAAQ,EAAE;EACZ,CAAC;EACDvB,MAAM,EAAE;IACNwB,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE;EACnB,CAAC;EACDtB,oBAAoB,EAAE;IACpBgB,IAAI,EAAE;EACR,CAAC;EACDf,oBAAoB,EAAE;IACpBgB,aAAa,EAAE,KAAK;IAEpBC,UAAU,EAAE;EACd,CAAC;EACDhB,wBAAwB,EAAE;IACxBqB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBzB,KAAK,EAAE,OAAO;IACd0B,WAAW,EAAE;EACf,CAAC;EACDpB,YAAY,EAAE;IACZW,IAAI,EAAE,CAAC;IAGPG,eAAe,EAAE,MAAM;IACvBO,KAAK,EAAE,MAAM;IACbC,WAAW,EAAE;EACf,CAAC;EACDC,iBAAiB,EAAE;IACjBR,QAAQ,EAAE,UAAU;IACpBS,GAAG,EAAE,MAAM;IACXV,eAAe,EAAE,MAAM;IACvBO,KAAK,EAAE,MAAM;IACbC,WAAW,EAAE;EACf,CAAC;EACDf,qBAAqB,EAAE;IACrBkB,OAAO,EAAE;EACX,CAAC;EACDjB,6BAA6B,EAAE;IAC7BM,eAAe,EAAE,OAAO;IACxBpB,KAAK,EAAE,OAAO;IACdgC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,QAAQ;IACxBf,UAAU,EAAE;EACd,CAAC;EACDJ,yBAAyB,EAAE;IACzBf,KAAK,EAAE;EACT,CAAC;EACDmC,cAAc,EAAE;IACdnC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAezB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}