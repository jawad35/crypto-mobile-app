{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport { runOnJS, useAnimatedReaction, useSharedValue } from 'react-native-reanimated';\nimport { LineChartDataProvider } from \"./Data\";\nimport { getDomain, lineChartDataPropToArray } from \"./utils\";\nexport var LineChartContext = React.createContext({\n  currentX: {\n    value: -1\n  },\n  currentIndex: {\n    value: -1\n  },\n  domain: [0, 0],\n  isActive: {\n    value: false\n  },\n  yDomain: {\n    min: 0,\n    max: 0\n  },\n  xDomain: undefined,\n  xLength: 0\n});\nLineChartProvider.displayName = 'LineChartProvider';\nvar _worklet_3782761378604_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    currentIndex\\n  } = this._closure;\\n  return currentIndex.value;\\n}\",\n  location: \"C:\\\\Users\\\\UEFI\\\\Desktop\\\\exchangepro\\\\crypto_mobile_app (copy)\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\line\\\\Context.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"currentIndex\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/Users/UEFI/Desktop/exchangepro/crypto_mobile_app (copy)/node_modules/react-native-wagmi-charts/lib/module/charts/line/Context.js\\\"],\\\"mappings\\\":\\\"AAoDsB,SAAAA,UAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAMD,YAAa,CAAAE,KAAA;AAAA\\\"}\"\n};\nvar _worklet_14363691739021_init_data = {\n  code: \"function anonymous(x, prevX) {\\n  const {\\n    onCurrentIndexChange,\\n    runOnJS\\n  } = this._closure;\\n  if (x !== -1 && x !== prevX && onCurrentIndexChange) {\\n    runOnJS(onCurrentIndexChange)(x);\\n  }\\n}\",\n  location: \"C:\\\\Users\\\\UEFI\\\\Desktop\\\\exchangepro\\\\crypto_mobile_app (copy)\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\line\\\\Context.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"x\\\",\\\"prevX\\\",\\\"onCurrentIndexChange\\\",\\\"runOnJS\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"C:/Users/UEFI/Desktop/exchangepro/crypto_mobile_app (copy)/node_modules/react-native-wagmi-charts/lib/module/charts/line/Context.js\\\"],\\\"mappings\\\":\\\"AAoDgD,SAACA,SAAGA,CAAKC,CAAA,EAAKC,KAAA;EAAA;IAAAC,oBAAA;IAAAC;EAAA,SAAAC,QAAA;EAC1D,IAAIJ,CAAC,KAAK,CAAC,CAAC,IAAIA,CAAC,KAAKC,KAAK,IAAIC,oBAAoB,EAAE;IACnDC,OAAO,CAACD,oBAAoB,CAAC,CAACF,CAAC,CAAC;EAClC;AACF\\\"}\"\n};\nexport function LineChartProvider(_ref) {\n  var children = _ref.children,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    yRange = _ref.yRange,\n    onCurrentIndexChange = _ref.onCurrentIndexChange,\n    xLength = _ref.xLength,\n    xDomain = _ref.xDomain;\n  var currentX = useSharedValue(-1);\n  var currentIndex = useSharedValue(-1);\n  var isActive = useSharedValue(false);\n  var domain = React.useMemo(function () {\n    return getDomain(Array.isArray(data) ? data : Object.values(data)[0]);\n  }, [data]);\n  var contextValue = React.useMemo(function () {\n    var _yRange$min, _yRange$max;\n    var values = lineChartDataPropToArray(data).map(function (_ref2) {\n      var value = _ref2.value;\n      return value;\n    });\n    return {\n      currentX: currentX,\n      currentIndex: currentIndex,\n      isActive: isActive,\n      domain: domain,\n      yDomain: {\n        min: (_yRange$min = yRange == null ? void 0 : yRange.min) != null ? _yRange$min : Math.min.apply(Math, _toConsumableArray(values)),\n        max: (_yRange$max = yRange == null ? void 0 : yRange.max) != null ? _yRange$max : Math.max.apply(Math, _toConsumableArray(values))\n      },\n      xDomain: xDomain,\n      xLength: xLength != null ? xLength : (Array.isArray(data) ? data : Object.values(data)[0]).length\n    };\n  }, [currentIndex, currentX, data, domain, isActive, yRange == null ? void 0 : yRange.max, yRange == null ? void 0 : yRange.min, xLength, xDomain]);\n  useAnimatedReaction(function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f() {\n      return currentIndex.value;\n    };\n    _f._closure = {\n      currentIndex: currentIndex\n    };\n    _f.__initData = _worklet_3782761378604_init_data;\n    _f.__workletHash = 3782761378604;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), function () {\n    var _e = [new global.Error(), -3, -27];\n    var _f = function _f(x, prevX) {\n      if (x !== -1 && x !== prevX && onCurrentIndexChange) {\n        runOnJS(onCurrentIndexChange)(x);\n      }\n    };\n    _f._closure = {\n      onCurrentIndexChange: onCurrentIndexChange,\n      runOnJS: runOnJS\n    };\n    _f.__initData = _worklet_14363691739021_init_data;\n    _f.__workletHash = 14363691739021;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), [currentIndex]);\n  return React.createElement(LineChartDataProvider, {\n    data: data\n  }, React.createElement(LineChartContext.Provider, {\n    value: contextValue\n  }, children));\n}","map":{"version":3,"names":["React","runOnJS","useAnimatedReaction","useSharedValue","LineChartDataProvider","getDomain","lineChartDataPropToArray","LineChartContext","createContext","currentX","value","currentIndex","domain","isActive","yDomain","min","max","xDomain","undefined","xLength","LineChartProvider","displayName","_worklet_3782761378604_init_data","code","location","sourceMap","_worklet_14363691739021_init_data","_ref","children","_ref$data","data","yRange","onCurrentIndexChange","useMemo","Array","isArray","Object","values","contextValue","_yRange$min","_yRange$max","map","_ref2","Math","apply","_toConsumableArray","length","_e","global","Error","_f","_closure","__initData","__workletHash","__stackDetails","__version","x","prevX","createElement","Provider"],"sources":["C:\\Users\\UEFI\\Desktop\\exchangepro\\crypto_mobile_app (copy)\\node_modules\\react-native-wagmi-charts\\src\\charts\\line\\Context.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  runOnJS,\n  useAnimatedReaction,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport type { TLineChartDataProp } from './types';\nimport { LineChartDataProvider } from './Data';\n\nimport type { TLineChartContext, YRangeProp } from './types';\nimport { getDomain, lineChartDataPropToArray } from './utils';\n\nexport const LineChartContext = React.createContext<TLineChartContext>({\n  currentX: { value: -1 },\n  currentIndex: { value: -1 },\n  domain: [0, 0],\n  isActive: { value: false },\n  yDomain: {\n    min: 0,\n    max: 0,\n  },\n  xDomain: undefined,\n  xLength: 0,\n});\n\ntype LineChartProviderProps = {\n  children: React.ReactNode;\n  data: TLineChartDataProp;\n  yRange?: YRangeProp;\n  onCurrentIndexChange?: (x: number) => void;\n  xLength?: number;\n  xDomain?: [number, number];\n};\n\nLineChartProvider.displayName = 'LineChartProvider';\n\nexport function LineChartProvider({\n  children,\n  data = [],\n  yRange,\n  onCurrentIndexChange,\n  xLength,\n  xDomain,\n}: LineChartProviderProps) {\n  const currentX = useSharedValue(-1);\n  const currentIndex = useSharedValue(-1);\n  const isActive = useSharedValue(false);\n\n  const domain = React.useMemo(\n    () => getDomain(Array.isArray(data) ? data : Object.values(data)[0]),\n    [data]\n  );\n\n  const contextValue = React.useMemo<TLineChartContext>(() => {\n    const values = lineChartDataPropToArray(data).map(({ value }) => value);\n\n    return {\n      currentX,\n      currentIndex,\n      isActive,\n      domain,\n      yDomain: {\n        min: yRange?.min ?? Math.min(...values),\n        max: yRange?.max ?? Math.max(...values),\n      },\n      xDomain,\n      xLength:\n        xLength ?? (Array.isArray(data) ? data : Object.values(data)[0]).length,\n    };\n  }, [\n    currentIndex,\n    currentX,\n    data,\n    domain,\n    isActive,\n    yRange?.max,\n    yRange?.min,\n    xLength,\n    xDomain,\n  ]);\n\n  useAnimatedReaction(\n    () => currentIndex.value,\n    (x, prevX) => {\n      if (x !== -1 && x !== prevX && onCurrentIndexChange) {\n        runOnJS(onCurrentIndexChange)(x);\n      }\n    },\n    [currentIndex]\n  );\n\n  return (\n    <LineChartDataProvider data={data}>\n      <LineChartContext.Provider value={contextValue}>\n        {children}\n      </LineChartContext.Provider>\n    </LineChartDataProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}