{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"x\", \"y\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Svg, { Line as SVGLine } from 'react-native-svg';\nexport var CandlestickChartLine = function CandlestickChartLine(_ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'gray' : _ref$color,\n    x = _ref.x,\n    y = _ref.y,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(Svg, {\n    style: StyleSheet.absoluteFill\n  }, React.createElement(SVGLine, _extends({\n    x1: 0,\n    y1: 0,\n    x2: x,\n    y2: y,\n    strokeWidth: 2,\n    stroke: color,\n    strokeDasharray: \"6 6\"\n  }, props)));\n};","map":{"version":3,"names":["React","StyleSheet","Svg","Line","SVGLine","CandlestickChartLine","_ref","_ref$color","color","x","y","props","_objectWithoutProperties","_excluded","createElement","style","absoluteFill","_extends","x1","y1","x2","y2","strokeWidth","stroke","strokeDasharray"],"sources":["C:\\Users\\UEFI\\Desktop\\crypto_mobile_app (copy) (2)\\node_modules\\react-native-wagmi-charts\\src\\charts\\candle\\Line.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Svg, { Line as SVGLine, LineProps } from 'react-native-svg';\n\nexport type CandlestickChartLineProps = Omit<LineProps, 'x' | 'y'> & {\n  color?: string;\n  x: number;\n  y: number;\n};\n\nexport const CandlestickChartLine = ({\n  color = 'gray',\n  x,\n  y,\n  ...props\n}: CandlestickChartLineProps) => {\n  return (\n    <Svg style={StyleSheet.absoluteFill}>\n      <SVGLine\n        x1={0}\n        y1={0}\n        x2={x}\n        y2={y}\n        strokeWidth={2}\n        stroke={color}\n        strokeDasharray=\"6 6\"\n        {...props}\n      />\n    </Svg>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAEzB,OAAOC,GAAG,IAAIC,IAAI,IAAIC,OAAO,QAAmB,kBAAkB;AAQlE,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAKA;EAAA,IAAAC,UAAA,GAAAD,IAAA,CAJ/BE,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,MAAM,GAAAA,UAAA;IACdE,CAAC,GAAAH,IAAA,CAADG,CAAC;IACDC,CAAC,GAAAJ,IAAA,CAADI,CAAC;IACEC,KAAA,GAAAC,wBAAA,CAAAN,IAAA,EAAAO,SAAA;EAEH,OACEb,KAAA,CAAAc,aAAA,CAACZ,GAAG;IAACa,KAAK,EAAEd,UAAU,CAACe;EAAa,GAClChB,KAAA,CAAAc,aAAA,CAACV,OAAO,EAAAa,QAAA;IACNC,EAAE,EAAE,CAAE;IACNC,EAAE,EAAE,CAAE;IACNC,EAAE,EAAEX,CAAE;IACNY,EAAE,EAAEX,CAAE;IACNY,WAAW,EAAE,CAAE;IACfC,MAAM,EAAEf,KAAM;IACdgB,eAAe,EAAC;EAAK,GACjBb,KAAK,CACV,CACE,CAAC;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}