{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar OrderPicker = function OrderPicker() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isPickerVisible = _useState2[0],\n    setPickerVisible = _useState2[1];\n  var _useState3 = useState(\"Market Order\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedValue = _useState4[0],\n    setSelectedValue = _useState4[1];\n  var handleTogglePicker = function handleTogglePicker() {\n    setPickerVisible(!isPickerVisible);\n  };\n  var handleValueChange = function handleValueChange(itemValue) {\n    setSelectedValue(itemValue);\n    setPickerVisible(false);\n  };\n  var items = [{\n    label: \"Market Order\",\n    value: \"Market Order\"\n  }, {\n    label: \"Limit Order\",\n    value: \"Limit Order\"\n  }];\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: handleTogglePicker,\n      style: styles.customPickerMainView,\n      children: _jsxs(View, {\n        style: styles.CustomPickerIconView,\n        children: [_jsx(Text, {\n          style: styles.CustomPickerSelectedText,\n          children: selectedValue\n        }), _jsx(AntDesign, {\n          name: \"caretdown\",\n          size: 20,\n          color: \"white\"\n        })]\n      })\n    }), isPickerVisible && _jsx(TouchableOpacity, {\n      style: styles.CustomPicker,\n      onPress: handleTogglePicker,\n      children: _jsx(View, {\n        style: styles.CustomPickerModal,\n        children: _jsx(FlatList, {\n          data: items,\n          keyExtractor: function keyExtractor(item) {\n            return item.value.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleValueChange(item.value);\n              },\n              children: _jsx(View, {\n                style: [styles.CustomPickerModalItem, selectedValue === item.value && styles.CustomPickerModalItemSelected],\n                children: _jsx(Text, {\n                  style: styles.CustomPickerModalItemText,\n                  children: item.label\n                })\n              })\n            });\n          }\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  customPickerMainView: {\n    width: \"100%\",\n    marginTop: 15,\n    paddingVertical: 10,\n    backgroundColor: \"#414141\",\n    justifyContent: \"center\",\n    paddingHorizontal: 6,\n    position: \"relative\"\n  },\n  CustomPickerIconView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  CustomPickerSelectedText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    fontFamily: \"sans-serif\",\n    color: \"white\"\n  },\n  CustomPicker: {\n    flex: 1\n  },\n  CustomPickerModal: {\n    position: \"absolute\",\n    backgroundColor: \"gray\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  CustomPickerModalItem: {\n    padding: 4\n  },\n  CustomPickerModalItemSelected: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    borderRadius: 10,\n    marginVertical: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  CustomPickerModalItemText: {\n    color: \"white\"\n  }\n});\nexport default OrderPicker;","map":{"version":3,"names":["AntDesign","React","useState","View","Text","TouchableOpacity","Modal","FlatList","StyleSheet","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OrderPicker","_useState","_useState2","_slicedToArray","isPickerVisible","setPickerVisible","_useState3","_useState4","selectedValue","setSelectedValue","handleTogglePicker","handleValueChange","itemValue","items","label","value","children","onPress","style","styles","customPickerMainView","CustomPickerIconView","CustomPickerSelectedText","name","size","color","CustomPicker","CustomPickerModal","data","keyExtractor","item","toString","renderItem","_ref","CustomPickerModalItem","CustomPickerModalItemSelected","CustomPickerModalItemText","create","width","marginTop","paddingVertical","backgroundColor","justifyContent","paddingHorizontal","position","flexDirection","alignItems","fontSize","fontWeight","fontFamily","flex","padding","borderRadius","marginVertical"],"sources":["C:/Users/UEFI/Desktop/Crypto App/crypto_mobile_app (copy) (2)/components/OrderPicker.js"],"sourcesContent":["import { AntDesign } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Modal,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\n\nconst OrderPicker = () => {\n  const [isPickerVisible, setPickerVisible] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"Market Order\");\n\n  const handleTogglePicker = () => {\n    setPickerVisible(!isPickerVisible);\n  };\n\n  const handleValueChange = (itemValue) => {\n    setSelectedValue(itemValue);\n    setPickerVisible(false);\n  };\n\n  const items = [\n    { label: \"Market Order\", value: \"Market Order\" },\n    { label: \"Limit Order\", value: \"Limit Order\" },\n  ];\n\n  return (\n    <>\n      <TouchableOpacity\n        onPress={handleTogglePicker}\n        style={styles.customPickerMainView}\n      >\n        <View style={styles.CustomPickerIconView}>\n          <Text style={styles.CustomPickerSelectedText}>{selectedValue}</Text>\n          <AntDesign name=\"caretdown\" size={20} color=\"white\" />\n        </View>\n      </TouchableOpacity>\n      {isPickerVisible && (\n        <TouchableOpacity\n          style={styles.CustomPicker}\n          onPress={handleTogglePicker}\n        >\n          <View style={styles.CustomPickerModal}>\n            <FlatList\n              data={items}\n              keyExtractor={(item) => item.value.toString()}\n              renderItem={({ item }) => (\n                <TouchableOpacity onPress={() => handleValueChange(item.value)}>\n                  <View\n                    style={[\n                      styles.CustomPickerModalItem,\n                      selectedValue === item.value &&\n                        styles.CustomPickerModalItemSelected,\n                    ]}\n                  >\n                    <Text style={styles.CustomPickerModalItemText}>\n                      {item.label}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              )}\n            />\n          </View>\n        </TouchableOpacity>\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  customPickerMainView: {\n    // height: 32,\n    width: \"100%\",\n    marginTop: 15,\n    // paddingHorizontal: 2,\n    paddingVertical: 10,\n    backgroundColor: \"#414141\",\n\n    justifyContent: \"center\",\n    paddingHorizontal: 6,\n    position: \"relative\",\n  },\n  CustomPickerIconView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  CustomPickerSelectedText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    fontFamily: \"sans-serif\",\n    color: \"white\",\n  },\n  CustomPicker: {\n    flex: 1,\n  },\n  CustomPickerModal: {\n    position: \"absolute\",\n    // top: 202,\n    // right: 20,\n    backgroundColor: \"gray\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  CustomPickerModalItem: {\n    padding: 4,\n  },\n  CustomPickerModalItemSelected: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    borderRadius: 10,\n    marginVertical: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  CustomPickerModalItemText: {\n    color: \"white\",\n  },\n});\n\nexport default OrderPicker;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUxC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAA4Cd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,eAAe,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACxC,IAAAI,UAAA,GAA0CnB,QAAQ,CAAC,cAAc,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3DE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAEtC,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/BL,gBAAgB,CAAC,CAACD,eAAe,CAAC;EACpC,CAAC;EAED,IAAMO,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,SAAS,EAAK;IACvCH,gBAAgB,CAACG,SAAS,CAAC;IAC3BP,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,IAAMQ,KAAK,GAAG,CACZ;IAAEC,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAe,CAAC,EAChD;IAAED,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAc,CAAC,CAC/C;EAED,OACElB,KAAA,CAAAE,SAAA;IAAAiB,QAAA,GACErB,IAAA,CAACL,gBAAgB;MACf2B,OAAO,EAAEP,kBAAmB;MAC5BQ,KAAK,EAAEC,MAAM,CAACC,oBAAqB;MAAAJ,QAAA,EAEnCnB,KAAA,CAACT,IAAI;QAAC8B,KAAK,EAAEC,MAAM,CAACE,oBAAqB;QAAAL,QAAA,GACvCrB,IAAA,CAACN,IAAI;UAAC6B,KAAK,EAAEC,MAAM,CAACG,wBAAyB;UAAAN,QAAA,EAAER;QAAa,CAAO,CAAC,EACpEb,IAAA,CAACV,SAAS;UAACsC,IAAI,EAAC,WAAW;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAO,CAAE,CAAC;MAAA,CAClD;IAAC,CACS,CAAC,EAClBrB,eAAe,IACdT,IAAA,CAACL,gBAAgB;MACf4B,KAAK,EAAEC,MAAM,CAACO,YAAa;MAC3BT,OAAO,EAAEP,kBAAmB;MAAAM,QAAA,EAE5BrB,IAAA,CAACP,IAAI;QAAC8B,KAAK,EAAEC,MAAM,CAACQ,iBAAkB;QAAAX,QAAA,EACpCrB,IAAA,CAACH,QAAQ;UACPoC,IAAI,EAAEf,KAAM;UACZgB,YAAY,EAAE,SAAAA,aAACC,IAAI;YAAA,OAAKA,IAAI,CAACf,KAAK,CAACgB,QAAQ,CAAC,CAAC;UAAA,CAAC;UAC9CC,UAAU,EAAE,SAAAA,WAAAC,IAAA;YAAA,IAAGH,IAAI,GAAAG,IAAA,CAAJH,IAAI;YAAA,OACjBnC,IAAA,CAACL,gBAAgB;cAAC2B,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMN,iBAAiB,CAACmB,IAAI,CAACf,KAAK,CAAC;cAAA,CAAC;cAAAC,QAAA,EAC7DrB,IAAA,CAACP,IAAI;gBACH8B,KAAK,EAAE,CACLC,MAAM,CAACe,qBAAqB,EAC5B1B,aAAa,KAAKsB,IAAI,CAACf,KAAK,IAC1BI,MAAM,CAACgB,6BAA6B,CACtC;gBAAAnB,QAAA,EAEFrB,IAAA,CAACN,IAAI;kBAAC6B,KAAK,EAAEC,MAAM,CAACiB,yBAA0B;kBAAApB,QAAA,EAC3Cc,IAAI,CAAChB;gBAAK,CACP;cAAC,CACH;YAAC,CACS,CAAC;UAAA;QACnB,CACH;MAAC,CACE;IAAC,CACS,CACnB;EAAA,CACD,CAAC;AAEP,CAAC;AAED,IAAMK,MAAM,GAAG1B,UAAU,CAAC4C,MAAM,CAAC;EAC/BjB,oBAAoB,EAAE;IAEpBkB,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,EAAE;IAEbC,eAAe,EAAE,EAAE;IACnBC,eAAe,EAAE,SAAS;IAE1BC,cAAc,EAAE,QAAQ;IACxBC,iBAAiB,EAAE,CAAC;IACpBC,QAAQ,EAAE;EACZ,CAAC;EACDvB,oBAAoB,EAAE;IACpBwB,aAAa,EAAE,KAAK;IACpBH,cAAc,EAAE,eAAe;IAC/BI,UAAU,EAAE;EACd,CAAC;EACDxB,wBAAwB,EAAE;IACxByB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,UAAU,EAAE,YAAY;IACxBxB,KAAK,EAAE;EACT,CAAC;EACDC,YAAY,EAAE;IACZwB,IAAI,EAAE;EACR,CAAC;EACDvB,iBAAiB,EAAE;IACjBiB,QAAQ,EAAE,UAAU;IAGpBH,eAAe,EAAE,MAAM;IACvBH,KAAK,EAAE,MAAM;IACbQ,UAAU,EAAE,QAAQ;IACpBJ,cAAc,EAAE;EAClB,CAAC;EACDR,qBAAqB,EAAE;IACrBiB,OAAO,EAAE;EACX,CAAC;EACDhB,6BAA6B,EAAE;IAC7BM,eAAe,EAAE,OAAO;IACxBhB,KAAK,EAAE,OAAO;IACd2B,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,CAAC;IACjBX,cAAc,EAAE,QAAQ;IACxBI,UAAU,EAAE;EACd,CAAC;EACDV,yBAAyB,EAAE;IACzBX,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAezB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}