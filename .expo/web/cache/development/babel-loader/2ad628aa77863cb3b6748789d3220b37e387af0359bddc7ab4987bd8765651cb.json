{"ast":null,"code":"import React from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Cycle from \"./Cycle\";\nimport SelectVolume from \"./SelectVolume\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BuyUpModal = function BuyUpModal(_ref) {\n  var startTrade = _ref.startTrade,\n    itemSymbol = _ref.itemSymbol,\n    showModal = _ref.showModal,\n    closeModal = _ref.closeModal,\n    onSelectCycle = _ref.onSelectCycle,\n    setSelectedButtonIndex = _ref.setSelectedButtonIndex,\n    selectedButtonIndex = _ref.selectedButtonIndex,\n    onSelectVolume = _ref.onSelectVolume,\n    setSelectedButtonIndexVol = _ref.setSelectedButtonIndexVol,\n    selectedButtonIndexVol = _ref.selectedButtonIndexVol;\n  var navigation = useNavigation();\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.modalContent,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.closeButton,\n        onPress: closeModal,\n        children: _jsx(AntDesign, {\n          name: \"close\",\n          size: 24,\n          color: \"white\"\n        })\n      }), _jsxs(View, {\n        style: styles.authcontainer,\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            marginVertical: \"3%\"\n          },\n          children: [_jsx(View, {\n            style: {\n              backgroundColor: \"green\",\n              paddingVertical: 4,\n              paddingHorizontal: 4,\n              marginRight: 4\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"white\"\n              },\n              children: \"Buy Up\"\n            })\n          }), _jsxs(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: [itemSymbol.toUpperCase(), \"/USDT\"]\n          })]\n        }), _jsx(Cycle, {\n          onSelectCycle: onSelectCycle,\n          setSelectedButtonIndex: setSelectedButtonIndex,\n          selectedButtonIndex: selectedButtonIndex\n        }), _jsx(SelectVolume, {\n          onSelectVolume: onSelectVolume,\n          setSelectedButtonIndexVol: setSelectedButtonIndexVol,\n          selectedButtonIndexVol: selectedButtonIndexVol\n        }), _jsxs(View, {\n          style: {\n            marginVertical: \"5%\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 16,\n              color: \"white\"\n            },\n            children: \"Available assets :\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 16,\n              color: \"white\"\n            },\n            children: \"0.00 USDT\"\n          })]\n        }), _jsx(TouchableOpacity, {\n          style: {\n            backgroundColor: \"blue\",\n            paddingVertical: 10,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginVertical: 20\n          },\n          onPress: startTrade,\n          children: _jsx(Text, {\n            style: {\n              color: \"white\",\n              fontSize: 16,\n              fontWeight: \"bold\"\n            },\n            children: \"Confirm Buy\"\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default BuyUpModal;\nvar styles = StyleSheet.create({\n  modalContent: {\n    backgroundColor: \"#222222\",\n    padding: \"5%\",\n    height: \"100%\",\n    borderRadius: 10\n  },\n  closeButton: {\n    alignSelf: \"flex-end\",\n    width: 20\n  },\n  closeButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  authcontainer: {}\n});","map":{"version":3,"names":["React","Modal","Pressable","StyleSheet","Text","TouchableOpacity","View","AntDesign","useNavigation","Cycle","SelectVolume","jsx","_jsx","jsxs","_jsxs","BuyUpModal","_ref","startTrade","itemSymbol","showModal","closeModal","onSelectCycle","setSelectedButtonIndex","selectedButtonIndex","onSelectVolume","setSelectedButtonIndexVol","selectedButtonIndexVol","navigation","children","style","styles","modalContent","closeButton","onPress","name","size","color","authcontainer","flexDirection","alignItems","marginVertical","backgroundColor","paddingVertical","paddingHorizontal","marginRight","toUpperCase","justifyContent","fontSize","fontWeight","create","padding","height","borderRadius","alignSelf","width","closeButtonText"],"sources":["C:/Users/UEFI/Desktop/exchangepro/crypto_mobile_app (copy)/components/BuyUpModal.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  Pressable,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Cycle from \"./Cycle\";\nimport SelectVolume from \"./SelectVolume\";\n\nconst BuyUpModal = ({\n  startTrade,\n  itemSymbol,\n  showModal,\n  closeModal,\n  onSelectCycle,\n  setSelectedButtonIndex,\n  selectedButtonIndex,\n  onSelectVolume,\n  setSelectedButtonIndexVol,\n  selectedButtonIndexVol,\n}) => {\n  const navigation = useNavigation();\n  return (\n    <View>\n      <View style={styles.modalContent}>\n        <TouchableOpacity style={styles.closeButton} onPress={closeModal}>\n          <AntDesign name=\"close\" size={24} color=\"white\" />\n        </TouchableOpacity>\n\n        <View style={styles.authcontainer}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              marginVertical: \"3%\",\n            }}\n          >\n            <View\n              style={{\n                backgroundColor: \"green\",\n                paddingVertical: 4,\n                paddingHorizontal: 4,\n                marginRight: 4,\n              }}\n            >\n              <Text style={{ color: \"white\" }}>Buy Up</Text>\n            </View>\n            <Text style={{ color: \"white\" }}>\n              {itemSymbol.toUpperCase()}/USDT\n            </Text>\n          </View>\n          <Cycle\n            onSelectCycle={onSelectCycle}\n            setSelectedButtonIndex={setSelectedButtonIndex}\n            selectedButtonIndex={selectedButtonIndex}\n          />\n          <SelectVolume\n            onSelectVolume={onSelectVolume}\n            setSelectedButtonIndexVol={setSelectedButtonIndexVol}\n            selectedButtonIndexVol={selectedButtonIndexVol}\n          />\n          <View\n            style={{\n              marginVertical: \"5%\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text style={{ fontSize: 16, color: \"white\" }}>\n              Available assets :\n            </Text>\n            <Text style={{ fontSize: 16, color: \"white\" }}>0.00 USDT</Text>\n          </View>\n\n          <TouchableOpacity\n            style={{\n              backgroundColor: \"blue\",\n              paddingVertical: 10,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginVertical: 20,\n            }}\n            onPress={startTrade}\n          >\n            <Text style={{ color: \"white\", fontSize: 16, fontWeight: \"bold\" }}>\n              Confirm Buy\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n    // </Modal>\n  );\n};\n\nexport default BuyUpModal;\n\nconst styles = StyleSheet.create({\n  modalContent: {\n    backgroundColor: \"#222222\",\n    padding: \"5%\",\n    height: \"100%\",\n    // padding: 20,\n    borderRadius: 10,\n    // alignItems: \"center\",\n  },\n\n  closeButton: {\n    alignSelf: \"flex-end\",\n    // marginBottom: 5,\n    width: 20,\n  },\n  closeButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  authcontainer: {\n    // flexDirection: \"column\",\n    // width: \"95%\",\n    // height: \"100%\",\n    // alignSelf: \"center\",\n    // marginTop: 3,\n    // marginBottom: 10,\n    // borderRadius: 5,\n    // padding: 10,\n    // borderColor: \"black\",\n    // borderStyle: \"solid\",\n    // borderWidth: 0.5,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}