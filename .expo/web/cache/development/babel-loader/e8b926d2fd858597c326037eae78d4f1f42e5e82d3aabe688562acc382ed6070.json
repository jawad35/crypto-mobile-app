{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CustomPicker = function CustomPicker(_ref) {\n  var selectedValue = _ref.selectedValue,\n    onValueChange = _ref.onValueChange,\n    items = _ref.items;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isPickerVisible = _useState2[0],\n    setPickerVisible = _useState2[1];\n  var handleTogglePicker = function handleTogglePicker() {\n    setPickerVisible(!isPickerVisible);\n  };\n  var handleValueChange = function handleValueChange(itemValue) {\n    onValueChange(itemValue);\n    setPickerVisible(false);\n  };\n  return _jsxs(TouchableOpacity, {\n    onPress: handleTogglePicker,\n    style: styles.customPickerMainView,\n    children: [_jsx(View, {\n      style: styles.CustomPickerIconView,\n      children: _jsx(Text, {\n        style: !selectedValue ? styles.CustomPickerText : styles.CustomPickerSelectedText,\n        children: !selectedValue ? \"Select Duration\" : selectedValue\n      })\n    }), _jsx(Modal, {\n      visible: isPickerVisible,\n      transparent: true,\n      style: styles.customPickerMainView,\n      children: _jsx(TouchableOpacity, {\n        style: styles.CustomPicker,\n        onPress: handleTogglePicker,\n        children: _jsx(View, {\n          style: styles.CustomPickerModal,\n          children: _jsx(FlatList, {\n            data: items,\n            keyExtractor: function keyExtractor(item) {\n              return item.value.toString();\n            },\n            renderItem: function renderItem(_ref2) {\n              var item = _ref2.item;\n              return _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleValueChange(item.value);\n                },\n                children: _jsx(View, {\n                  style: [styles.CustomPickerModalItem, selectedValue === (item == null ? void 0 : item.value) ? styles.CustomPickerModalItemSelected : styles.CustomPickerModalItem],\n                  children: _jsx(Text, {\n                    style: [styles.CustomPickerModalItemText, selectedValue === (item == null ? void 0 : item.value) ? styles.CustomPickerModalItemSelected : styles.CustomPickerModalItem],\n                    children: item.label\n                  })\n                })\n              });\n            }\n          })\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  customPickerMainView: {\n    height: 32,\n    width: 115,\n    borderWidth: 2,\n    paddingHorizontal: 2,\n    borderColor: \"black\",\n    borderRadius: 4,\n    justifyContent: \"center\",\n    paddingHorizontal: 6\n  },\n  pickerCon: {\n    width: 300,\n    paddingVertical: 10,\n    paddingHorizontal: 18,\n    borderColor: \"#E4E4E4\",\n    borderWidth: 1,\n    borderRadius: 50,\n    alignSelf: \"center\",\n    marginTop: 12\n  },\n  picker: {\n    height: 22,\n    width: Dimensions.get(\"window\") - 50\n  },\n  CustomPicker: {\n    flex: 1\n  },\n  CustomPickerIconView: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  CustomPickerIcon: {\n    marginLeft: 6,\n    width: 12,\n    height: 12\n  },\n  CustomPickerModal: {\n    position: \"absolute\",\n    top: 202,\n    right: 20,\n    backgroundColor: \"#fff\",\n    width: 115,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  CustomPickerText: {\n    fontSize: 15,\n    color: \"black\",\n    fontFamily: \"sans-serif\"\n  },\n  CustomPickerSelectedText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    fontFamily: \"sans-serif\",\n    color: \"black\"\n  },\n  CustomPickerModalItem: {\n    padding: 4\n  },\n  CustomPickerModalItemSelected: {\n    backgroundColor: \"green\",\n    color: \"black\",\n    borderRadius: 10,\n    marginVertical: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  CustomPickerModalItemText: {\n    color: \"black\"\n  }\n});\nexport default CustomPicker;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Modal","FlatList","Image","StyleSheet","Dimensions","jsx","_jsx","jsxs","_jsxs","CustomPicker","_ref","selectedValue","onValueChange","items","_useState","_useState2","_slicedToArray","isPickerVisible","setPickerVisible","handleTogglePicker","handleValueChange","itemValue","onPress","style","styles","customPickerMainView","children","CustomPickerIconView","CustomPickerText","CustomPickerSelectedText","visible","transparent","CustomPickerModal","data","keyExtractor","item","value","toString","renderItem","_ref2","CustomPickerModalItem","CustomPickerModalItemSelected","CustomPickerModalItemText","label","create","height","width","borderWidth","paddingHorizontal","borderColor","borderRadius","justifyContent","pickerCon","paddingVertical","alignSelf","marginTop","picker","get","flex","flexDirection","alignItems","CustomPickerIcon","marginLeft","position","top","right","backgroundColor","fontSize","color","fontFamily","fontWeight","padding","marginVertical"],"sources":["C:/Users/UEFI/Desktop/Crypto App/crypto_mobile_app (copy) (2)/components/CustomPicker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Modal,\n  FlatList,\n  Image,\n  StyleSheet,\n  Dimensions,\n} from \"react-native\";\nconst CustomPicker = ({ selectedValue, onValueChange, items }) => {\n  const [isPickerVisible, setPickerVisible] = useState(false);\n\n  const handleTogglePicker = () => {\n    setPickerVisible(!isPickerVisible);\n  };\n\n  const handleValueChange = (itemValue) => {\n    onValueChange(itemValue);\n    setPickerVisible(false);\n  };\n\n  return (\n    <TouchableOpacity\n      onPress={handleTogglePicker}\n      style={styles.customPickerMainView}\n    >\n      <View style={styles.CustomPickerIconView}>\n        <Text\n          style={\n            !selectedValue\n              ? styles.CustomPickerText\n              : styles.CustomPickerSelectedText\n          }\n        >\n          {!selectedValue ? \"Select Duration\" : selectedValue}\n        </Text>\n        {/* <Image source={downArrow} style={styles.CustomPickerIcon} /> */}\n      </View>\n      <Modal\n        visible={isPickerVisible}\n        transparent\n        style={styles.customPickerMainView}\n      >\n        <TouchableOpacity\n          style={styles.CustomPicker}\n          onPress={handleTogglePicker}\n        >\n          <View style={styles.CustomPickerModal}>\n            <FlatList\n              data={items}\n              keyExtractor={(item) => item.value.toString()}\n              renderItem={({ item }) => (\n                <TouchableOpacity onPress={() => handleValueChange(item.value)}>\n                  <View\n                    style={[\n                      styles.CustomPickerModalItem,\n                      selectedValue === item?.value\n                        ? styles.CustomPickerModalItemSelected\n                        : styles.CustomPickerModalItem,\n                    ]}\n                  >\n                    <Text\n                      style={[\n                        styles.CustomPickerModalItemText,\n                        selectedValue === item?.value\n                          ? styles.CustomPickerModalItemSelected\n                          : styles.CustomPickerModalItem,\n                      ]}\n                    >\n                      {item.label}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              )}\n            />\n          </View>\n        </TouchableOpacity>\n      </Modal>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  customPickerMainView: {\n    height: 32,\n    width: 115,\n    borderWidth: 2,\n    paddingHorizontal: 2,\n    borderColor: \"black\",\n    borderRadius: 4,\n    justifyContent: \"center\",\n    paddingHorizontal: 6,\n  },\n  pickerCon: {\n    width: 300,\n    paddingVertical: 10,\n    paddingHorizontal: 18,\n    borderColor: \"#E4E4E4\",\n    borderWidth: 1,\n    borderRadius: 50,\n    alignSelf: \"center\",\n    marginTop: 12,\n  },\n  picker: {\n    height: 22,\n    width: Dimensions.get(\"window\") - 50,\n  },\n  CustomPicker: {\n    flex: 1,\n  },\n  CustomPickerIconView: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  CustomPickerIcon: {\n    marginLeft: 6,\n    width: 12,\n    height: 12,\n  },\n  CustomPickerModal: {\n    position: \"absolute\",\n    top: 202,\n    right: 20,\n    backgroundColor: \"#fff\",\n    width: 115,\n    // borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // alignSelf: 'center',\n  },\n  CustomPickerText: {\n    fontSize: 15,\n    color: \"black\",\n    fontFamily: \"sans-serif\",\n  },\n  CustomPickerSelectedText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    fontFamily: \"sans-serif\",\n    color: \"black\",\n  },\n  CustomPickerModalItem: {\n    padding: 4,\n  },\n  CustomPickerModalItemSelected: {\n    backgroundColor: \"green\",\n    color: \"black\",\n    borderRadius: 10,\n    marginVertical: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  CustomPickerModalItemText: {\n    color: \"black\",\n  },\n});\n\nexport default CustomPicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}