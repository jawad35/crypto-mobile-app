{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { createContext, useContext, useMemo } from 'react';\nexport var DefaultLineChartId = '__LineChartData';\nvar LineChartDataContext = createContext(_defineProperty({}, DefaultLineChartId, []));\nexport function LineChartDataProvider(_ref) {\n  var children = _ref.children,\n    data = _ref.data;\n  var contextValue = useMemo(function () {\n    if (Array.isArray(data)) {\n      return _defineProperty({}, DefaultLineChartId, data);\n    }\n    return data;\n  }, [data]);\n  return React.createElement(LineChartDataContext.Provider, {\n    value: contextValue\n  }, children);\n}\nvar LineChartIdContext = createContext(undefined);\nexport function LineChartIdProvider(_ref3) {\n  var id = _ref3.id,\n    children = _ref3.children;\n  return React.createElement(LineChartIdContext.Provider, {\n    value: id\n  }, children);\n}\nexport var useLineChartId = function useLineChartId() {\n  return useContext(LineChartIdContext);\n};\nexport function useLineChartData(_ref4) {\n  var id = _ref4.id;\n  var dataContext = useContext(LineChartDataContext);\n  validateLineChartId(dataContext, id);\n  var data = dataContext[id || DefaultLineChartId];\n  return useMemo(function () {\n    return {\n      data: data\n    };\n  }, [data]);\n}\nfunction validateLineChartId(dataContext, id) {\n  if (id != null && !dataContext[id]) {\n    var otherIds = Object.keys(dataContext).filter(function (otherId) {\n      return otherId !== DefaultLineChartId;\n    });\n    var singular = otherIds.length <= 1;\n    var joinedIds = otherIds.join(', ');\n    var suggestion = otherIds.length ? `Did you mean to use ${singular ? 'this ID' : 'one of these IDs'}: ${joinedIds}` : `You didn't pass any IDs to your <LineChart.Provider />'s data prop. Did you mean to pass an array instead?`;\n    console.warn(`[react-native-wagmi-charts] Invalid usage of \"id\" prop on LineChart. You passed id=\"${id}\", but this ID does not exist in your <LineChart.Provider />'s \"data\" prop.\n\n${suggestion}`);\n  } else if (id == null && !dataContext[DefaultLineChartId]) {\n    var _otherIds = Object.keys(dataContext);\n    var _singular = _otherIds.length <= 1;\n    var _joinedIds = _otherIds.join(', ');\n    var _suggestion = _otherIds.length ? `Did you mean to use ${_singular ? 'this ID' : 'one of these IDs'}: ${_joinedIds}` : `You didn't pass any IDs to your <LineChart.Provider />'s data prop. Did you mean to pass an array instead?`;\n    console.error(`[react-native-wagmi-charts] Missing data \"id\" prop on LineChart. You must pass an id prop to <LineChart /> when using a dictionary for your data.\n\n${_suggestion}\n    `);\n  }\n}","map":{"version":3,"names":["React","createContext","useContext","useMemo","DefaultLineChartId","LineChartDataContext","_defineProperty","LineChartDataProvider","_ref","children","data","contextValue","Array","isArray","createElement","Provider","value","LineChartIdContext","undefined","LineChartIdProvider","_ref3","id","useLineChartId","useLineChartData","_ref4","dataContext","validateLineChartId","otherIds","Object","keys","filter","otherId","singular","length","joinedIds","join","suggestion","console","warn","error"],"sources":["C:\\Users\\UEFI\\Desktop\\Crypto App\\crypto_mobile_app (copy) (2)\\node_modules\\react-native-wagmi-charts\\src\\charts\\line\\Data.tsx"],"sourcesContent":["import type { TLineChartData } from './types';\nimport React, { createContext, useContext, useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport type { TLineChartDataProp } from './types';\n\nexport const DefaultLineChartId = '__LineChartData';\n\nexport type LineChartDataContext = {\n  [key: string]: TLineChartData;\n};\n\nconst LineChartDataContext = createContext<LineChartDataContext>({\n  [DefaultLineChartId]: [],\n});\n\nexport type LineChartDataProviderProps = {\n  children: ReactNode;\n  data: TLineChartDataProp;\n};\n\nexport function LineChartDataProvider({\n  children,\n  data,\n}: LineChartDataProviderProps) {\n  const contextValue = useMemo<LineChartDataContext>(() => {\n    if (Array.isArray(data)) {\n      return {\n        [DefaultLineChartId]: data,\n      };\n    }\n    return data;\n  }, [data]);\n\n  return (\n    <LineChartDataContext.Provider value={contextValue}>\n      {children}\n    </LineChartDataContext.Provider>\n  );\n}\n\nconst LineChartIdContext = createContext<string | undefined>(undefined);\n\nexport function LineChartIdProvider({\n  id,\n  children,\n}: {\n  id?: string;\n  children: ReactNode;\n}) {\n  return (\n    <LineChartIdContext.Provider value={id}>\n      {children}\n    </LineChartIdContext.Provider>\n  );\n}\n\nexport const useLineChartId = () => useContext(LineChartIdContext);\n\nexport function useLineChartData({ id }: { id?: string }) {\n  const dataContext = useContext(LineChartDataContext);\n\n  validateLineChartId(dataContext, id);\n\n  const data = dataContext[id || DefaultLineChartId];\n\n  return useMemo(() => ({ data }), [data]);\n}\n\nfunction validateLineChartId(dataContext: LineChartDataContext, id?: string) {\n  if (id != null && !dataContext[id]) {\n    const otherIds = Object.keys(dataContext).filter(\n      (otherId) => otherId !== DefaultLineChartId\n    );\n    const singular = otherIds.length <= 1;\n\n    const joinedIds = otherIds.join(', ');\n\n    const suggestion = otherIds.length\n      ? `Did you mean to use ${\n          singular ? 'this ID' : 'one of these IDs'\n        }: ${joinedIds}`\n      : `You didn't pass any IDs to your <LineChart.Provider />'s data prop. Did you mean to pass an array instead?`;\n\n    console.warn(\n      `[react-native-wagmi-charts] Invalid usage of \"id\" prop on LineChart. You passed id=\"${id}\", but this ID does not exist in your <LineChart.Provider />'s \"data\" prop.\n\n${suggestion}`\n    );\n  } else if (id == null && !dataContext[DefaultLineChartId]) {\n    const otherIds = Object.keys(dataContext);\n    const singular = otherIds.length <= 1;\n\n    const joinedIds = otherIds.join(', ');\n    const suggestion = otherIds.length\n      ? `Did you mean to use ${\n          singular ? 'this ID' : 'one of these IDs'\n        }: ${joinedIds}`\n      : `You didn't pass any IDs to your <LineChart.Provider />'s data prop. Did you mean to pass an array instead?`;\n\n    console.error(`[react-native-wagmi-charts] Missing data \"id\" prop on LineChart. You must pass an id prop to <LineChart /> when using a dictionary for your data.\n\n${suggestion}\n    `);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}