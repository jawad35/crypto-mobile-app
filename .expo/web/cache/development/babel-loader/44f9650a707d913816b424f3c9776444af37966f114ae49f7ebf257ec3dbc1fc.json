{"ast":null,"code":"import axios from \"axios\";\nexport var GET_COIN_MARKET_BEGIN = \"GET_COIN_MARKET_BEGIN\";\nexport var GET_COIN_MARKET_SUCCESS = \"GET_COIN_MARKET_SUCCESS\";\nexport var GET_COIN_MARKET_FAILURE = \"GET_COIN_MARKET_FAILURE\";\nexport var getCoinMarketBegin = function getCoinMarketBegin() {\n  return {\n    type: GET_COIN_MARKET_BEGIN\n  };\n};\nexport var getCoinMarketSuccess = function getCoinMarketSuccess(coins) {\n  return {\n    type: GET_COIN_MARKET_SUCCESS,\n    payload: {\n      coins: coins\n    }\n  };\n};\nexport var getCoinMarketFailure = function getCoinMarketFailure(error) {\n  return {\n    type: GET_COIN_MARKET_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};\nexport function getCoinMarket() {\n  var currency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"usd\";\n  var orderBy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"market_cap_desc\";\n  var sparkline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var priceChangePerc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"7d\";\n  var perPage = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 8;\n  var page = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  return function (dispatch) {\n    dispatch(getCoinMarketBegin());\n    var apiUrl = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=8&page=1&sparkline=true&price_change_percentage=7d&locale=en`;\n    return axios({\n      url: apiUrl,\n      method: 'GET',\n      header: {\n        Accept: 'application/json'\n      }\n    }).then(function (response) {\n      if (response.status == 200) {\n        dispatch(getCoinMarketSuccess(response.data));\n      } else {\n        dispatch(getCoinMarketFailure(response.data));\n      }\n    }).catch(function (error) {\n      dispatch(getCoinMarketFailure(error));\n    });\n  };\n}","map":{"version":3,"names":["axios","GET_COIN_MARKET_BEGIN","GET_COIN_MARKET_SUCCESS","GET_COIN_MARKET_FAILURE","getCoinMarketBegin","type","getCoinMarketSuccess","coins","payload","getCoinMarketFailure","error","getCoinMarket","currency","arguments","length","undefined","orderBy","sparkline","priceChangePerc","perPage","page","dispatch","apiUrl","url","method","header","Accept","then","response","status","data","catch"],"sources":["C:/Users/om/Downloads/Crypto Exchange/Crypto Exchange/Font-End/crypto_mobile_app (copy)/stores/market/marketActions.js"],"sourcesContent":["import axios from \"axios\";\r\nexport const GET_COIN_MARKET_BEGIN = \"GET_COIN_MARKET_BEGIN\"\r\nexport const GET_COIN_MARKET_SUCCESS = \"GET_COIN_MARKET_SUCCESS\"\r\nexport const GET_COIN_MARKET_FAILURE = \"GET_COIN_MARKET_FAILURE\"\r\n\r\n/// CoinMarket /\r\n\r\nexport const getCoinMarketBegin = () => ({\r\n    type: GET_COIN_MARKET_BEGIN\r\n})\r\n\r\nexport const getCoinMarketSuccess = (coins) => ({\r\n    type: GET_COIN_MARKET_SUCCESS,\r\n    payload: {coins}\r\n})\r\n\r\nexport const getCoinMarketFailure = (error) => ({\r\n    type: GET_COIN_MARKET_FAILURE,\r\n    payload: {error}\r\n})\r\n\r\nexport function getCoinMarket(currency = \"usd\", orderBy = \"market_cap_desc\", sparkline = true, priceChangePerc = \"7d\", perPage = 8, page = 1) {\r\n\r\n    return dispatch => {\r\n        dispatch(getCoinMarketBegin())\r\n\r\n        let apiUrl = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=8&page=1&sparkline=true&price_change_percentage=7d&locale=en`\r\n\r\n        return axios({\r\n            url: apiUrl,\r\n            method: 'GET',\r\n            header: { \r\n                Accept: 'application/json'\r\n            } \r\n        }).then((response) => {\r\n           if (response.status == 200) {\r\n            // console.log(\"COINGECO\", response)\r\n            dispatch(getCoinMarketSuccess(response.data))\r\n           } else {\r\n            // console.log(\"COINGECO ELSE\", response)\r\n\r\n            dispatch(getCoinMarketFailure(response.data))\r\n           }\r\n        }).catch((error) => {\r\n\r\n            dispatch(getCoinMarketFailure(error))\r\n        })\r\n    }\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,IAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,IAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,IAAMC,uBAAuB,GAAG,yBAAyB;AAIhE,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA;EAAA,OAAU;IACrCC,IAAI,EAAEJ;EACV,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,KAAK;EAAA,OAAM;IAC5CF,IAAI,EAAEH,uBAAuB;IAC7BM,OAAO,EAAE;MAACD,KAAK,EAALA;IAAK;EACnB,CAAC;AAAA,CAAC;AAEF,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,KAAK;EAAA,OAAM;IAC5CL,IAAI,EAAEF,uBAAuB;IAC7BK,OAAO,EAAE;MAACE,KAAK,EAALA;IAAK;EACnB,CAAC;AAAA,CAAC;AAEF,OAAO,SAASC,aAAaA,CAAA,EAAiH;EAAA,IAAhHC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,iBAAiB;EAAA,IAAEI,SAAS,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IAAEK,eAAe,GAAAL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IAAEM,OAAO,GAAAN,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEO,IAAI,GAAAP,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAExI,OAAO,UAAAQ,QAAQ,EAAI;IACfA,QAAQ,CAACjB,kBAAkB,CAAC,CAAC,CAAC;IAE9B,IAAIkB,MAAM,GAAI,4JAA2J;IAEzK,OAAOtB,KAAK,CAAC;MACTuB,GAAG,EAAED,MAAM;MACXE,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE;QACJC,MAAM,EAAE;MACZ;IACJ,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,QAAQ,EAAK;MACnB,IAAIA,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;QAE3BR,QAAQ,CAACf,oBAAoB,CAACsB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC9C,CAAC,MAAM;QAGNT,QAAQ,CAACZ,oBAAoB,CAACmB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC9C;IACH,CAAC,CAAC,CAACC,KAAK,CAAC,UAACrB,KAAK,EAAK;MAEhBW,QAAQ,CAACZ,oBAAoB,CAACC,KAAK,CAAC,CAAC;IACzC,CAAC,CAAC;EACN,CAAC;AAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}