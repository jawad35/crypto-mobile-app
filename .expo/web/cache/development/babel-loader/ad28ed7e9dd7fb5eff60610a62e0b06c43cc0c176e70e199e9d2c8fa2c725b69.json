{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"positiveColor\", \"negativeColor\", \"rectProps\", \"lineProps\", \"margin\", \"useAnimations\", \"renderRect\", \"renderLine\", \"candleProps\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Svg } from 'react-native-svg';\nimport { CandlestickChartDimensionsContext } from \"./Chart\";\nimport { CandlestickChartCandle } from \"./Candle\";\nimport { useCandlestickChart } from \"./useCandlestickChart\";\nexport function CandlestickChartCandles(_ref) {\n  var positiveColor = _ref.positiveColor,\n    negativeColor = _ref.negativeColor,\n    rectProps = _ref.rectProps,\n    lineProps = _ref.lineProps,\n    margin = _ref.margin,\n    _ref$useAnimations = _ref.useAnimations,\n    useAnimations = _ref$useAnimations === void 0 ? true : _ref$useAnimations,\n    renderRect = _ref.renderRect,\n    renderLine = _ref.renderLine,\n    candleProps = _ref.candleProps,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useContext = React.useContext(CandlestickChartDimensionsContext),\n    width = _React$useContext.width,\n    height = _React$useContext.height;\n  var _useCandlestickChart = useCandlestickChart(),\n    data = _useCandlestickChart.data,\n    domain = _useCandlestickChart.domain,\n    step = _useCandlestickChart.step;\n  return React.createElement(Svg, _extends({\n    width: width,\n    height: height\n  }, props), step > 0 && data.map(function (candle, index) {\n    return React.createElement(CandlestickChartCandle, _extends({\n      key: index,\n      domain: domain,\n      margin: margin,\n      maxHeight: height,\n      width: step,\n      positiveColor: positiveColor,\n      negativeColor: negativeColor,\n      renderRect: renderRect,\n      renderLine: renderLine,\n      rectProps: rectProps,\n      lineProps: lineProps,\n      useAnimations: useAnimations,\n      candle: candle,\n      index: index\n    }, candleProps));\n  }));\n}","map":{"version":3,"names":["React","Svg","CandlestickChartDimensionsContext","CandlestickChartCandle","useCandlestickChart","CandlestickChartCandles","_ref","positiveColor","negativeColor","rectProps","lineProps","margin","_ref$useAnimations","useAnimations","renderRect","renderLine","candleProps","props","_objectWithoutProperties","_excluded","_React$useContext","useContext","width","height","_useCandlestickChart","data","domain","step","createElement","_extends","map","candle","index","key","maxHeight"],"sources":["C:\\Users\\UEFI\\Desktop\\exchangepro\\crypto_mobile_app (copy)\\node_modules\\react-native-wagmi-charts\\src\\charts\\candle\\Candles.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Svg, SvgProps } from 'react-native-svg';\n\nimport { CandlestickChartDimensionsContext } from './Chart';\nimport { CandlestickChartCandle, CandlestickChartCandleProps } from './Candle';\nimport { useCandlestickChart } from './useCandlestickChart';\n\ntype CandlestickChartCandlesProps = SvgProps & {\n  width?: number;\n  height?: number;\n  margin?: CandlestickChartCandleProps['margin'];\n  positiveColor?: CandlestickChartCandleProps['positiveColor'];\n  negativeColor?: CandlestickChartCandleProps['negativeColor'];\n  renderRect?: CandlestickChartCandleProps['renderRect'];\n  renderLine?: CandlestickChartCandleProps['renderLine'];\n  rectProps?: CandlestickChartCandleProps['rectProps'];\n  lineProps?: CandlestickChartCandleProps['lineProps'];\n  candleProps?: Partial<CandlestickChartCandleProps>;\n  useAnimations?: boolean;\n};\n\nexport function CandlestickChartCandles({\n  positiveColor,\n  negativeColor,\n  rectProps,\n  lineProps,\n  margin,\n  useAnimations = true,\n  renderRect,\n  renderLine,\n  candleProps,\n  ...props\n}: CandlestickChartCandlesProps) {\n  const { width, height } = React.useContext(CandlestickChartDimensionsContext);\n  const { data, domain, step } = useCandlestickChart();\n\n  ////////////////////////////////////////////////\n\n  return (\n    <Svg width={width} height={height} {...props}>\n      {step > 0 &&\n        data.map((candle, index) => (\n          <CandlestickChartCandle\n            key={index as React.Key}\n            domain={domain}\n            margin={margin}\n            maxHeight={height}\n            width={step}\n            positiveColor={positiveColor}\n            negativeColor={negativeColor}\n            renderRect={renderRect}\n            renderLine={renderLine}\n            rectProps={rectProps}\n            lineProps={lineProps}\n            useAnimations={useAnimations}\n            candle={candle}\n            index={index}\n            {...candleProps}\n          />\n        ))}\n    </Svg>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAkB,kBAAkB;AAEhD,SAASC,iCAAiC;AAC1C,SAASC,sBAAsB;AAC/B,SAASC,mBAAmB;AAgB5B,OAAO,SAASC,uBAAuBA,CAAAC,IAAA,EAWN;EAAA,IAV/BC,aAAa,GAAAD,IAAA,CAAbC,aAAa;IACbC,aAAa,GAAAF,IAAA,CAAbE,aAAa;IACbC,SAAS,GAAAH,IAAA,CAATG,SAAS;IACTC,SAAS,GAAAJ,IAAA,CAATI,SAAS;IACTC,MAAM,GAAAL,IAAA,CAANK,MAAM;IAAAC,kBAAA,GAAAN,IAAA,CACNO,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,IAAI,GAAAA,kBAAA;IACpBE,UAAU,GAAAR,IAAA,CAAVQ,UAAU;IACVC,UAAU,GAAAT,IAAA,CAAVS,UAAU;IACVC,WAAW,GAAAV,IAAA,CAAXU,WAAW;IACRC,KAAA,GAAAC,wBAAA,CAAAZ,IAAA,EAAAa,SAAA;EAEH,IAAAC,iBAAA,GAA0BpB,KAAK,CAACqB,UAAU,CAACnB,iCAAiC,CAAC;IAArEoB,KAAK,GAAAF,iBAAA,CAALE,KAAK;IAAEC,MAAA,GAAAH,iBAAA,CAAAG,MAAA;EACf,IAAAC,oBAAA,GAA+BpB,mBAAmB,CAAC,CAAC;IAA5CqB,IAAI,GAAAD,oBAAA,CAAJC,IAAI;IAAEC,MAAM,GAAAF,oBAAA,CAANE,MAAM;IAAEC,IAAA,GAAAH,oBAAA,CAAAG,IAAA;EAItB,OACE3B,KAAA,CAAA4B,aAAA,CAAC3B,GAAG,EAAA4B,QAAA;IAACP,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA;EAAO,GAAKN,KAAK,GACzCU,IAAI,GAAG,CAAC,IACPF,IAAI,CAACK,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;IAAA,OACrBhC,KAAA,CAAA4B,aAAA,CAACzB,sBAAsB,EAAA0B,QAAA;MACrBI,GAAG,EAAED,KAAmB;MACxBN,MAAM,EAAEA,MAAO;MACff,MAAM,EAAEA,MAAO;MACfuB,SAAS,EAAEX,MAAO;MAClBD,KAAK,EAAEK,IAAK;MACZpB,aAAa,EAAEA,aAAc;MAC7BC,aAAa,EAAEA,aAAc;MAC7BM,UAAU,EAAEA,UAAW;MACvBC,UAAU,EAAEA,UAAW;MACvBN,SAAS,EAAEA,SAAU;MACrBC,SAAS,EAAEA,SAAU;MACrBG,aAAa,EAAEA,aAAc;MAC7BkB,MAAM,EAAEA,MAAO;MACfC,KAAK,EAAEA;IAAM,GACThB,WAAW,CAChB,CACF;EAAA,EACA,CAAC;AAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}