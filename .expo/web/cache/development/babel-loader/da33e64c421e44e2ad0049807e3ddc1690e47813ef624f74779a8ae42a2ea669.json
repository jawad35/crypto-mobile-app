{"ast":null,"code":"var _worklet_12760739908555_init_data = {\n  code: \"function snapPoint(value, velocity, points) {\\n  var point = value + 0.2 * velocity;\\n  var deltas = points.map(function (p) {\\n    return Math.abs(point - p);\\n  });\\n  var minDelta = Math.min.apply(null, deltas);\\n  return points.filter(function (p) {\\n    return Math.abs(point - p) === minDelta;\\n  })[0];\\n}\",\n  location: \"C:\\\\Users\\\\UEFI\\\\Desktop\\\\crypto_mobile_app (copy) (2)\\\\node_modules\\\\react-native-redash\\\\lib\\\\module\\\\Physics.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"snapPoint\\\",\\\"value\\\",\\\"velocity\\\",\\\"points\\\",\\\"point\\\",\\\"deltas\\\",\\\"map\\\",\\\"p\\\",\\\"Math\\\",\\\"abs\\\",\\\"minDelta\\\",\\\"min\\\",\\\"apply\\\",\\\"filter\\\"],\\\"sources\\\":[\\\"C:/Users/UEFI/Desktop/crypto_mobile_app (copy) (2)/node_modules/react-native-redash/lib/module/Physics.js\\\"],\\\"mappings\\\":\\\"AAAqB,SAAAA,SAASA,CAAUC,KAAA,EAAKC,QAAC,EAAQC,MAAC,EAAM;EAAY,IAAIC,KAAK,GAACH,KAAK,GAAC,GAAG,GAACC,QAAQ;EAAC,IAAIG,MAAM,GAACF,MAAM,CAACG,GAAG,CAAC,UAASC,CAAC,EAAC;IAAC,OAAOC,IAAI,CAACC,GAAG,CAACL,KAAK,GAACG,CAAC,CAAC;EAAC,CAAC,CAAC;EAAC,IAAIG,QAAQ,GAACF,IAAI,CAACG,GAAG,CAACC,KAAK,CAAC,IAAI,EAACP,MAAM,CAAC;EAAC,OAAOF,MAAM,CAACU,MAAM,CAAC,UAASN,CAAC,EAAC;IAAC,OAAOC,IAAI,CAACC,GAAG,CAACL,KAAK,GAACG,CAAC,CAAC,KAAGG,QAAQ;EAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC\\\"}\"\n};\nexport var snapPoint = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(value, velocity, points) {\n    var point = value + 0.2 * velocity;\n    var deltas = points.map(function (p) {\n      return Math.abs(point - p);\n    });\n    var minDelta = Math.min.apply(null, deltas);\n    return points.filter(function (p) {\n      return Math.abs(point - p) === minDelta;\n    })[0];\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_12760739908555_init_data;\n  _f.__workletHash = 12760739908555;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();","map":{"version":3,"names":["snapPoint","_e","global","Error","_f","value","velocity","points","point","deltas","map","p","Math","abs","minDelta","min","apply","filter","_closure","__initData","_worklet_12760739908555_init_data","__workletHash","__stackDetails","__version"],"sources":["C:\\Users\\UEFI\\Desktop\\crypto_mobile_app (copy) (2)\\node_modules\\react-native-redash\\lib\\module\\Physics.ts"],"sourcesContent":["/**\n * @summary Select a point where the animation should snap to given the value of the gesture and it's velocity.\n * @worklet\n */\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  \"worklet\";\n  const point = value + 0.2 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n"],"mappings":";;;;;AAIA,OAAO,IAAMA,SAAS;EAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAC,EAAA,YAAAA,GACpBC,KADuB,EAEvBC,QAFuB,EAGvBC,MAHuB,EAIZ;IAEX,IAAMC,KAAK,GAAGH,KAAK,GAAG,MAAMC,QAA5B;IACA,IAAMG,MAAM,GAAGF,MAAM,CAACG,GAAP,CAAW,UAACC,CAAD;MAAA,OAAOC,IAAI,CAACC,GAAL,CAASL,KAAK,GAAGG,CAAjB,CAAP;IAAA,CAAX,CAAf;IACA,IAAMG,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBP,MAArB,CAAjB;IACA,OAAOF,MAAM,CAACU,MAAP,CAAc,UAACN,CAAD;MAAA,OAAOC,IAAI,CAACC,GAAL,CAASL,KAAK,GAAGG,CAAjB,MAAwBG,QAA/B;IAAA,CAAd,EAAuD,CAAvD,CAAP;EACD,CAVM;EAAAV,EAAA,CAAAc,QAAA;EAAAd,EAAA,CAAAe,UAAA,GAAAC,iCAAA;EAAAhB,EAAA,CAAAiB,aAAA;EAAAjB,EAAA,CAAAkB,cAAA,GAAArB,EAAA;EAAAG,EAAA,CAAAmB,SAAA;EAAA,OAAAnB,EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}