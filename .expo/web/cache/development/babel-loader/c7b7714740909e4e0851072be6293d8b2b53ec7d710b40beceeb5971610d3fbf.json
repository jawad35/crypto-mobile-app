{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport { useDerivedValue } from 'react-native-reanimated';\nimport { getYForX, parse } from 'react-native-redash';\nimport { LineChartContext } from \"./Context\";\nimport { LineChartDimensionsContext } from \"./Chart\";\nvar _worklet_7406129845269_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    parsedPath,\\n    width,\\n    currentX,\\n    getYForX\\n  } = this._closure;\\n  if (!parsedPath) {\\n    return -1;\\n  }\\n  const boundedX = Math.min(width, currentX.value);\\n  return getYForX(parsedPath, boundedX) || 0;\\n}\",\n  location: \"C:\\\\Users\\\\UEFI\\\\Desktop\\\\exchangepro\\\\crypto_mobile_app (copy)\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\line\\\\useCurrentY.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"parsedPath\\\",\\\"width\\\",\\\"currentX\\\",\\\"getYForX\\\",\\\"_closure\\\",\\\"boundedX\\\",\\\"Math\\\",\\\"min\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/Users/UEFI/Desktop/exchangepro/crypto_mobile_app (copy)/node_modules/react-native-wagmi-charts/lib/module/charts/line/useCurrentY.js\\\"],\\\"mappings\\\":\\\"AAcmC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,UAAA;IAAAC,KAAA;IAAAC,QAAA;IAAAC;EAAA,SAAAC,QAAA;EACrC,IAAI,CAACJ,UAAU,EAAE;IACf,OAAO,CAAC,CAAC;EACX;EACA,MAAMK,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACN,KAAK,EAAEC,QAAQ,CAACM,KAAK,CAAC;EAChD,OAAOL,QAAQ,CAACH,UAAU,EAAEK,QAAQ,CAAC,IAAI,CAAC;AAC5C\\\"}\"\n};\nexport function useCurrentY() {\n  var _useContext = useContext(LineChartDimensionsContext),\n    path = _useContext.path,\n    width = _useContext.width;\n  var _useContext2 = useContext(LineChartContext),\n    currentX = _useContext2.currentX;\n  var parsedPath = useMemo(function () {\n    return path ? parse(path) : undefined;\n  }, [path]);\n  var currentY = useDerivedValue(function () {\n    var _e = [new global.Error(), -5, -27];\n    var _f = function _f() {\n      if (!parsedPath) {\n        return -1;\n      }\n      var boundedX = Math.min(width, currentX.value);\n      return getYForX(parsedPath, boundedX) || 0;\n    };\n    _f._closure = {\n      parsedPath: parsedPath,\n      width: width,\n      currentX: currentX,\n      getYForX: getYForX\n    };\n    _f.__initData = _worklet_7406129845269_init_data;\n    _f.__workletHash = 7406129845269;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), [parsedPath, width, currentX]);\n  return currentY;\n}","map":{"version":3,"names":["useContext","useMemo","useDerivedValue","getYForX","parse","LineChartContext","LineChartDimensionsContext","_worklet_7406129845269_init_data","code","location","sourceMap","useCurrentY","_useContext","path","width","_useContext2","currentX","parsedPath","undefined","currentY","_e","global","Error","_f","boundedX","Math","min","value","_closure","__initData","__workletHash","__stackDetails","__version"],"sources":["C:\\Users\\UEFI\\Desktop\\exchangepro\\crypto_mobile_app (copy)\\node_modules\\react-native-wagmi-charts\\src\\charts\\line\\useCurrentY.ts"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { useDerivedValue } from 'react-native-reanimated';\nimport { getYForX, parse } from 'react-native-redash';\nimport { LineChartContext } from './Context';\nimport { LineChartDimensionsContext } from './Chart';\n\nexport function useCurrentY() {\n  const { path, width } = useContext(LineChartDimensionsContext);\n  const { currentX } = useContext(LineChartContext);\n  const parsedPath = useMemo(() => (path ? parse(path) : undefined), [path]);\n\n  const currentY = useDerivedValue(() => {\n    if (!parsedPath) {\n      return -1;\n    }\n    const boundedX = Math.min(width, currentX.value);\n    return getYForX(parsedPath, boundedX) || 0;\n  }, [parsedPath, width, currentX]);\n\n  return currentY;\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,QAAQ,EAAEC,KAAK,QAAQ,qBAAqB;AACrD,SAASC,gBAAgB;AACzB,SAASC,0BAA0B;AAAiB,IAAAC,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAEpD,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,IAAAC,WAAA,GAAwBZ,UAAU,CAACM,0BAA0B,CAAC;IAAtDO,IAAI,GAAAD,WAAA,CAAJC,IAAI;IAAEC,KAAA,GAAAF,WAAA,CAAAE,KAAA;EACd,IAAAC,YAAA,GAAqBf,UAAU,CAACK,gBAAgB,CAAC;IAAzCW,QAAA,GAAAD,YAAA,CAAAC,QAAA;EACR,IAAMC,UAAU,GAAGhB,OAAO,CAAC;IAAA,OAAOY,IAAI,GAAGT,KAAK,CAACS,IAAI,CAAC,GAAGK,SAAU;EAAA,GAAE,CAACL,IAAI,CAAC,CAAC;EAE1E,IAAMM,QAAQ,GAAGjB,eAAe;IAAA,IAAAkB,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,IAAAC,EAAA,YAAAA,GAAA,EAAO;MACrC,IAAI,CAACN,UAAU,EAAE;QACf,OAAO,CAAC,CAAC;MACX;MACA,IAAMO,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACZ,KAAK,EAAEE,QAAQ,CAACW,KAAK,CAAC;MAChD,OAAOxB,QAAQ,CAACc,UAAU,EAAEO,QAAQ,CAAC,IAAI,CAAC;IAC5C,CAAC;IAAAD,EAAA,CAAAK,QAAA;MAAAX,UAAA,EAXaA,UAAW;MAAAH,KAAA,EAFlBA,KAAA;MAAAE,QAAA,EAA0BA,QAAQ;MAAAb,QAAA,EAEpCA;IAAS;IAAAoB,EAAA,CAAAM,UAAA,GAAAtB,gCAAA;IAAAgB,EAAA,CAAAO,aAAA;IAAAP,EAAA,CAAAQ,cAAA,GAAAX,EAAA;IAAAG,EAAA,CAAAS,SAAA;IAAA,OAAAT,EAAA;EAAA,KAWX,CAACN,UAAU,EAAEH,KAAK,EAAEE,QAAQ,CAAC,CAAC;EAEjC,OAAOG,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}