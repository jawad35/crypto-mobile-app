{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LineChartDimensionsContext } from \"../Chart\";\nimport { useLineChart } from \"../useLineChart\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nvar isEnabled = false;\nif (canUseDOM) {\n  var HOVER_THRESHOLD_MS = 1000;\n  var lastTouchTimestamp = 0;\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n  document.addEventListener('touchstart', disableHover, true);\n  document.addEventListener('touchmove', disableHover, true);\n  document.addEventListener('mousemove', enableHover, true);\n}\nfunction isHoverEnabled() {\n  return isEnabled;\n}\nexport var LineChartHoverTrap = function LineChartHoverTrap() {\n  var _React$useContext = React.useContext(LineChartDimensionsContext),\n    width = _React$useContext.width,\n    parsedPath = _React$useContext.parsedPath;\n  var _useLineChart = useLineChart(),\n    currentX = _useLineChart.currentX,\n    currentIndex = _useLineChart.currentIndex,\n    isActive = _useLineChart.isActive,\n    data = _useLineChart.data;\n  var onMouseMove = React.useCallback(function (_ref) {\n    var x = _ref.x;\n    if (isHoverEnabled()) {\n      if (parsedPath) {\n        var boundedX = Math.min(x, width);\n        isActive.value = true;\n        currentX.value = boundedX;\n        var minIndex = 0;\n        var boundedIndex = Math.max(minIndex, Math.round(boundedX / width / (1 / (data.length - 1))));\n        currentIndex.value = boundedIndex;\n      }\n    } else {\n      isActive.value = false;\n      currentIndex.value = -1;\n    }\n  }, [currentIndex, currentX, data.length, isActive, parsedPath, width]);\n  var onMouseLeave = React.useCallback(function () {\n    isActive.value = false;\n    currentIndex.value = -1;\n  }, [currentIndex, isActive]);\n  return React.createElement(View, {\n    style: StyleSheet.absoluteFill,\n    onMouseMove: React.useCallback(function (e) {\n      var rect = e.currentTarget.getBoundingClientRect();\n      var x = e.clientX - rect.left;\n      onMouseMove({\n        x: x\n      });\n    }, [onMouseMove]),\n    onMouseLeave: onMouseLeave\n  });\n};","map":{"version":3,"names":["React","View","StyleSheet","LineChartDimensionsContext","useLineChart","canUseDOM","isEnabled","HOVER_THRESHOLD_MS","lastTouchTimestamp","enableHover","Date","now","disableHover","document","addEventListener","isHoverEnabled","LineChartHoverTrap","_React$useContext","useContext","width","parsedPath","_useLineChart","currentX","currentIndex","isActive","data","onMouseMove","useCallback","_ref","x","boundedX","Math","min","value","minIndex","boundedIndex","max","round","length","onMouseLeave","createElement","style","absoluteFill","e","rect","currentTarget","getBoundingClientRect","clientX","left"],"sources":["C:\\Users\\om\\Downloads\\Crypto Exchange\\Crypto Exchange\\Font-End\\crypto_mobile_app (copy)\\node_modules\\react-native-wagmi-charts\\src\\charts\\line\\HoverTrap\\index.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { LineChartDimensionsContext } from '../Chart';\nimport { useLineChart } from '../useLineChart';\n\n// @ts-expect-error missing types\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nlet isEnabled = false;\n\n// the following logic comes from the creator of react-native-web\n// https://gist.github.com/necolas/1c494e44e23eb7f8c5864a2fac66299a\n// it's also used by MotiPressable's hover interactions\n// https://github.com/nandorojo/moti/blob/master/packages/interactions/src/pressable/hoverable.tsx\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener('touchstart', disableHover, true);\n  document.addEventListener('touchmove', disableHover, true);\n  document.addEventListener('mousemove', enableHover, true);\n}\n\nfunction isHoverEnabled(): boolean {\n  return isEnabled;\n}\n\nexport const LineChartHoverTrap = () => {\n  const { width, parsedPath } = React.useContext(LineChartDimensionsContext);\n  const { currentX, currentIndex, isActive, data } = useLineChart();\n\n  const onMouseMove = React.useCallback(\n    ({ x }: { x: number }) => {\n      if (isHoverEnabled()) {\n        if (parsedPath) {\n          const boundedX = Math.min(x, width);\n          isActive.value = true;\n          currentX.value = boundedX;\n\n          // on Web, we could drag the cursor to be negative, breaking it\n          // so we clamp the index at 0 to fix it\n          // https://github.com/coinjar/react-native-wagmi-charts/issues/24\n          const minIndex = 0;\n          const boundedIndex = Math.max(\n            minIndex,\n            Math.round(boundedX / width / (1 / (data.length - 1)))\n          );\n\n          currentIndex.value = boundedIndex;\n        }\n      } else {\n        isActive.value = false;\n        currentIndex.value = -1;\n      }\n    },\n    [currentIndex, currentX, data.length, isActive, parsedPath, width]\n  );\n\n  const onMouseLeave = React.useCallback(() => {\n    isActive.value = false;\n    currentIndex.value = -1;\n  }, [currentIndex, isActive]);\n\n  return (\n    <View\n      style={StyleSheet.absoluteFill}\n      // @ts-expect-error mouse move event\n      onMouseMove={React.useCallback(\n        // eslint-disable-next-line no-undef\n        (e: React.MouseEvent<HTMLElement>) => {\n          let rect = e.currentTarget.getBoundingClientRect();\n          let x = e.clientX - rect.left; // x position within the element.\n\n          onMouseMove({ x });\n        },\n        [onMouseMove]\n      )}\n      onMouseLeave={onMouseLeave}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}