{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/circleci/repo/src/ReText.tsx\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\nvar styles = StyleSheet.create({\n  baseStyle: {\n    color: \"black\"\n  }\n});\nAnimated.addWhitelistedNativeProps({\n  text: true\n});\nvar AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\nvar _worklet_12504948205549_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    text\\n  } = this._closure;\\n  return {\\n    text: text.value\\n  };\\n}\",\n  location: \"C:\\\\Users\\\\UEFI\\\\Desktop\\\\crypto_mobile_app (copy) (2)\\\\node_modules\\\\react-native-redash\\\\lib\\\\module\\\\ReText.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"text\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/Users/UEFI/Desktop/crypto_mobile_app (copy) (2)/node_modules/react-native-redash/lib/module/ReText.js\\\"],\\\"mappings\\\":\\\"AAAw1C,SAAAA,SAAUA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAC,OAAM;IAACD,IAAI,EAACA,IAAI,CAACE;EAAK,CAAC;AAAC\\\"}\"\n};\nvar ReText = function ReText(props) {\n  var _style$props = _objectSpread({\n      style: {}\n    }, props),\n    text = _style$props.text,\n    style = _style$props.style;\n  var animatedProps = useAnimatedProps(function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f() {\n      return {\n        text: text.value\n      };\n    };\n    _f._closure = {\n      text: text\n    };\n    _f.__initData = _worklet_12504948205549_init_data;\n    _f.__workletHash = 12504948205549;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }());\n  return React.createElement(AnimatedTextInput, {\n    underlineColorAndroid: \"transparent\",\n    editable: false,\n    value: text.value,\n    style: [styles.baseStyle, style],\n    animatedProps: animatedProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n};\nexport default ReText;","map":{"version":3,"names":["React","StyleSheet","TextInput","Animated","useAnimatedProps","styles","create","baseStyle","color","addWhitelistedNativeProps","text","AnimatedTextInput","createAnimatedComponent","_worklet_12504948205549_init_data","code","location","sourceMap","ReText","props","_style$props","_objectSpread","style","animatedProps","_e","global","Error","_f","value","_closure","createElement","underlineColorAndroid","editable","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:\\Users\\UEFI\\Desktop\\crypto_mobile_app (copy) (2)\\node_modules\\react-native-redash\\lib\\module\\ReText.tsx"],"sourcesContent":["import React from \"react\";\nimport type { TextProps as RNTextProps } from \"react-native\";\nimport { StyleSheet, TextInput } from \"react-native\";\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\n\nconst styles = StyleSheet.create({\n  baseStyle: {\n    color: \"black\",\n  },\n});\nAnimated.addWhitelistedNativeProps({ text: true });\n\ninterface TextProps {\n  text: Animated.SharedValue<string>;\n  style?: Animated.AnimateProps<RNTextProps>[\"style\"];\n}\n\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nconst ReText = (props: TextProps) => {\n  const { text, style } = { style: {}, ...props };\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      text: text.value,\n      // Here we use any because the text prop is not available in the type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;\n  });\n  return (\n    <AnimatedTextInput\n      underlineColorAndroid=\"transparent\"\n      editable={false}\n      value={text.value}\n      style={[styles.baseStyle, style]}\n      {...{ animatedProps }}\n    />\n  );\n};\n\nexport default ReText;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AACA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AAEA,IAAMC,MAAM,GAAGJ,UAAU,CAACK,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,KAAK,EAAE;EADE;AADoB,CAAlB,CAAf;AAKAL,QAAQ,CAACM,yBAAT,CAAmC;EAAEC,IAAI,EAAE;AAAR,CAAnC;AAOA,IAAMC,iBAAiB,GAAGR,QAAQ,CAACS,uBAAT,CAAiCV,SAAjC,CAA1B;AAEA,IAAAW,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAAA,IAAMC,MAAM,GAAG,SAATA,MAASA,CAACC,KAAD,EAAsB;EACnC,IAAAC,YAAA,GAAAC,aAAA;MAA0BC,KAAK,EAAE;IAAjC,GAAwCH,KAAxC;IAAQR,IAAR,GAAAS,YAAA,CAAQT,IAAR;IAAcW,KAAd,GAAAF,YAAA,CAAcE,KAAd;EACA,IAAMC,aAAa,GAAGlB,gBAAgB;IAAA,IAAAmB,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,IAAAC,EAAA,YAAAA,GAAA,EAAO;MAC3C,OAAO;QACLhB,IAAI,EAAEA,IAAI,CAACiB;MADN,CAAP;IAKD,CANqC;IAAAD,EAAA,CAAAE,QAAA;MAAAlB,IAAA,E;;;;;;;KAAA,CAAtC;EAOA,OACEV,KAAA,CAAA6B,aAAA,CAAClB,iBAAD;IACEmB,qBAAqB,EAAC,aADxB;IAEEC,QAAQ,EAAE,KAFZ;IAGEJ,KAAK,EAAEjB,IAAI,CAACiB,KAHd;IAIEN,KAAK,EAAE,CAAChB,MAAM,CAACE,SAAR,EAAmBc,KAAnB,CAJT;IAKQC,aAAa,EAAbA,aALR;IAAAU,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EADF;AASD,CAlBD;AAoBA,eAAenB,MAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}