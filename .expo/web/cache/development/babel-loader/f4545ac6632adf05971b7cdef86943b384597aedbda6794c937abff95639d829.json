{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport VolumeValue from \"./VolumeValue\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SelectVolume = function SelectVolume(_ref) {\n  var onSelectVolume = _ref.onSelectVolume,\n    setSelectedButtonIndexVol = _ref.setSelectedButtonIndexVol,\n    selectedButtonIndexVol = _ref.selectedButtonIndexVol;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    volValue = _useState2[0],\n    setVolValue = _useState2[1];\n  var handleBoxPress = function handleBoxPress(item, index) {\n    console.log(\"INDEX IN VOLUME\", index);\n    setSelectedButtonIndexVol(index);\n    onSelectVolume(item);\n    setVolValue(item.value);\n  };\n  console.log(\"VOLUME\", selectedButtonIndexVol);\n  var boxData = [{\n    value: 100\n  }, {\n    value: 500\n  }, {\n    value: 1000\n  }, {\n    value: 2000\n  }, {\n    value: 5000\n  }, {\n    value: 10000\n  }, {\n    value: 20000\n  }, {\n    value: 30000\n  }];\n  return _jsxs(View, {\n    style: {\n      marginVertical: \"5%\"\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontWeight: \"bold\",\n        color: \"white\"\n      },\n      children: \"Buying Volume\"\n    }), _jsx(View, {\n      style: {\n        paddingHorizontal: 6,\n        paddingVertical: 10,\n        backgroundColor: \"gray\",\n        marginVertical: 16\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\",\n          fontWeight: \"500\",\n          fontSize: 16\n        },\n        children: volValue ? volValue : \" Amount Min 100 USDT\"\n      })\n    }), _jsx(FlatList, {\n      data: boxData,\n      numColumns: \"4\",\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleBoxPress(item, index);\n          },\n          children: _jsx(VolumeValue, {\n            value: item.value,\n            bgColor: selectedButtonIndexVol === index ? \"blue\" : \"gray\"\n          })\n        });\n      }\n    })]\n  });\n};\nexport default SelectVolume;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","VolumeValue","jsx","_jsx","jsxs","_jsxs","SelectVolume","_ref","onSelectVolume","setSelectedButtonIndexVol","selectedButtonIndexVol","_useState","_useState2","_slicedToArray","volValue","setVolValue","handleBoxPress","item","index","console","log","value","boxData","View","style","marginVertical","children","Text","fontWeight","color","paddingHorizontal","paddingVertical","backgroundColor","fontSize","FlatList","data","numColumns","keyExtractor","toString","renderItem","_ref2","TouchableOpacity","onPress","bgColor","styles","StyleSheet","create"],"sources":["C:/Users/UEFI/Desktop/exchangepro/crypto_mobile_app (copy)/components/SelectVolume.js"],"sourcesContent":["import {\n  Dimensions,\n  FlatList,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport VolumeValue from \"./VolumeValue\";\n\nconst SelectVolume = ({\n  onSelectVolume,\n  setSelectedButtonIndexVol,\n  selectedButtonIndexVol,\n}) => {\n  const [volValue, setVolValue] = useState(\"\");\n\n  const handleBoxPress = (item, index) => {\n    console.log(\"INDEX IN VOLUME\", index);\n    setSelectedButtonIndexVol(index);\n    onSelectVolume(item);\n    setVolValue(item.value);\n  };\n  console.log(\"VOLUME\", selectedButtonIndexVol);\n  const boxData = [\n    { value: 100 },\n    { value: 500 },\n    { value: 1000 },\n    { value: 2000 },\n    { value: 5000 },\n    { value: 10000 },\n    { value: 20000 },\n    { value: 30000 },\n    // Add more box data as needed\n  ];\n  return (\n    <View style={{ marginVertical: \"5%\" }}>\n      <Text style={{ fontWeight: \"bold\", color: \"white\" }}>Buying Volume</Text>\n      <View\n        style={{\n          paddingHorizontal: 6,\n          paddingVertical: 10,\n          backgroundColor: \"gray\",\n          // borderRadius: 5,\n          marginVertical: 16,\n        }}\n      >\n        <Text style={{ color: \"white\", fontWeight: \"500\", fontSize: 16 }}>\n          {volValue ? volValue : \" Amount Min 100 USDT\"}\n        </Text>\n      </View>\n      <FlatList\n        data={boxData}\n        numColumns={\"4\"}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item, index }) => (\n          <TouchableOpacity onPress={() => handleBoxPress(item, index)}>\n            <VolumeValue\n              value={item.value}\n              bgColor={selectedButtonIndexVol === index ? \"blue\" : \"gray\"}\n            />\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n};\n\nexport default SelectVolume;\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}